diff -urN slib-3b4/ChangeLog slib-9999/ChangeLog
--- slib-3b4/ChangeLog	2013-05-08 21:20:06.000000000 -0400
+++ slib-9999/ChangeLog	2014-04-07 19:02:32.000000000 -0400
@@ -1,3 +1,29 @@
+2014-04-07  Aubrey Jaffer  <agj@alum.mit.edu>
+
+	* rmdsff.scm (make-cell, integer->coordinates)
+	(coordinates->integer): Don't depend on LETREC* behavior.
+
+2014-03-30  Aubrey Jaffer  <agj@alum.mit.edu>
+
+	* rmdsff.scm: Removed #+CHOICE code comments.
+
+2014-03-13  Aubrey Jaffer  <agj@alum.mit.edu>
+
+	* rmdsff.scm: Improved algorithim eliminates gratuitous 0 digit at
+	top level.
+
+2014-02-10  Aubrey Jaffer  <agj@alum.mit.edu>
+
+	* Makefile, mklibcat.scm, rmdsff.scm, slib.texi (space-filling):
+	Added "rmdsff.scm" and documentation.
+
+2014-02-08  Aubrey Jaffer  <agj@alum.mit.edu>
+
+	* phil-spc.scm, schmooz.scm, slib.texi: Because TeXinfo-5 changed
+	the rules, don't allow text between @defun and @defunx.
+
+	* usercat: Use local copy of "schmooz.scm".
+
 2013-05-08  Aubrey Jaffer  <jaffer@dv7>
 
 	* require.scm (*slib-version*): Bumped from 3b3 to 3b4.
@@ -7,7 +33,7 @@
 	* strsrch.scm (substring?, substring-ci?): Replaced the
 	skip-vector with an alist (to work with wide characters).
 
-2013-01-10  Andy Wingo  <wingo@pobox.com>
+2013-01-10  Andy Wingo
 
 	* README: Update documentation for Guile.
 
diff -urN slib-3b4/Makefile slib-9999/Makefile
--- slib-3b4/Makefile	2013-05-14 22:42:55.000000000 -0400
+++ slib-9999/Makefile	2014-02-08 20:45:10.000000000 -0500
@@ -87,7 +87,7 @@
 	mkclrnam.scm color.scm subarray.scm dbutil.scm array.scm transact.scm\
 	arraymap.scm phil-spc.scm lineio.scm differ.scm cvs.scm tree.scm\
 	coerce.scm byte.scm bytenumb.scm matfile.scm tsort.scm manifest.scm\
-	peanosfc.scm linterp.scm math-integer.scm
+	peanosfc.scm linterp.scm math-integer.scm rmdsff.scm
 txifiles =grapheps.txi glob.txi getparam.txi\
 	vet.txi top-refs.txi hashtab.txi chap.txi comparse.txi\
 	alist.txi ratize.txi modular.txi dirs.txi priorque.txi queue.txi\
@@ -98,7 +98,7 @@
 	mkclrnam.txi color.txi subarray.txi dbutil.txi array.txi transact.txi\
 	arraymap.txi phil-spc.txi lineio.txi differ.txi cvs.txi tree.txi\
 	coerce.txi byte.txi bytenumb.txi matfile.txi tsort.txi manifest.txi\
-	peanosfc.txi linterp.txi math-integer.txi
+	peanosfc.txi linterp.txi math-integer.txi rmdsff.txi
 #txifiles = `echo $(txiscms) | sed 's%.scm%.txi%g'`
 
 texifiles = schmooz.texi indexes.texi object.texi format.texi limit.texi \
diff -urN slib-3b4/color.txi slib-9999/color.txi
--- slib-3b4/color.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/color.txi	2014-04-07 19:04:47.000000000 -0400
@@ -108,7 +108,8 @@
 
 Returns the L*a*b* color composed of @var{L*}, @var{a*}, @var{b*} with @var{white-point}.
 
-@defunx color:l*a*b* L* a* b*
+@end defun
+@defun color:l*a*b* L* a* b*
 Returns the L*a*b* color composed of @var{L*}, @var{a*}, @var{b*}.  If the coordinates
 do not encode a valid L*a*b* color, then an error is signaled.
 @end defun
@@ -118,7 +119,8 @@
 
 Returns the list of 3 numbers encoding @var{color} in L*a*b* with @var{white-point}.
 
-@defunx color->l*a*b* color
+@end defun
+@defun color->l*a*b* color
 Returns the list of 3 numbers encoding @var{color} in L*a*b*.
 @end defun
 
@@ -139,7 +141,8 @@
 
 Returns the L*u*v* color composed of @var{L*}, @var{u*}, @var{v*} with @var{white-point}.
 
-@defunx color:l*u*v* L* u* v*
+@end defun
+@defun color:l*u*v* L* u* v*
 Returns the L*u*v* color composed of @var{L*}, @var{u*}, @var{v*}.  If the coordinates
 do not encode a valid L*u*v* color, then an error is signaled.
 @end defun
@@ -149,7 +152,8 @@
 
 Returns the list of 3 numbers encoding @var{color} in L*u*v* with @var{white-point}.
 
-@defunx color->l*u*v* color
+@end defun
+@defun color->l*u*v* color
 Returns the list of 3 numbers encoding @var{color} in L*u*v*.
 @end defun
 
@@ -207,7 +211,8 @@
 
 Returns the L*C*h color composed of @var{L*}, @var{C*}, @var{h} with @var{white-point}.
 
-@defunx color:l*c*h L* C* h
+@end defun
+@defun color:l*c*h L* C* h
 Returns the L*C*h color composed of @var{L*}, @var{C*}, @var{h}.  If the coordinates
 do not encode a valid L*C*h color, then an error is signaled.
 @end defun
@@ -217,7 +222,8 @@
 
 Returns the list of 3 numbers encoding @var{color} in L*C*h with @var{white-point}.
 
-@defunx color->l*c*h color
+@end defun
+@defun color->l*c*h color
 Returns the list of 3 numbers encoding @var{color} in L*C*h.
 @end defun
 
@@ -327,10 +333,12 @@
 
 Returns the e-sRGB10 color composed of integers @var{r}, @var{g}, @var{b}.
 
-@defunx color:e-srgb 12 r g b
+@end defun
+@defun color:e-srgb 12 r g b
 Returns the e-sRGB12 color composed of integers @var{r}, @var{g}, @var{b}.
 
-@defunx color:e-srgb 16 r g b
+@end defun
+@defun color:e-srgb 16 r g b
 Returns the e-sRGB16 color composed of integers @var{r}, @var{g}, @var{b}.
 If the coordinates do not encode a valid e-sRGB color, then an error
 is signaled.
diff -urN slib-3b4/colornam.txi slib-9999/colornam.txi
--- slib-3b4/colornam.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/colornam.txi	2014-04-07 19:04:47.000000000 -0400
@@ -58,7 +58,8 @@
 @var{name} if it exists; #f otherwise.
 
 
-@defunx color-dictionary name rdb
+@end defun
+@defun color-dictionary name rdb
 
 @var{rdb} must be an open relational database or a string naming a relational
 database file; and the symbol @var{name} a table therein.  @code{color-dictionary} returns the
diff -urN slib-3b4/dbutil.txi slib-9999/dbutil.txi
--- slib-3b4/dbutil.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/dbutil.txi	2014-04-07 19:04:47.000000000 -0400
@@ -87,7 +87,8 @@
 database will be opened with base-table type @var{base-table-type}).
 
 
-@defunx open-database rdb
+@end defun
+@defun open-database rdb
 Returns an open relational database associated with @var{rdb}.
 @code{open-database} will attempt to deduce the correct base-table-type.
 @end defun
diff -urN slib-3b4/determ.txi slib-9999/determ.txi
--- slib-3b4/determ.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/determ.txi	2014-04-07 19:04:47.000000000 -0400
@@ -54,10 +54,12 @@
 
 Returns the product of matrices @var{m1} and @var{m2}.
 
-@defunx matrix:product m1 z
+@end defun
+@defun matrix:product m1 z
 Returns matrix @var{m1} times scalar @var{z}.
 
-@defunx matrix:product z m1
+@end defun
+@defun matrix:product z m1
 Returns matrix @var{m1} times scalar @var{z}.
 @end defun
 
diff -urN slib-3b4/dirs.txi slib-9999/dirs.txi
--- slib-3b4/dirs.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/dirs.txi	2014-04-07 19:04:47.000000000 -0400
@@ -28,12 +28,14 @@
 @samp{directory-for-each} is unspecified.
 
 
-@defunx directory-for-each proc directory pred
+@end defun
+@defun directory-for-each proc directory pred
 Applies @var{proc} only to those filenames for which the procedure
 @var{pred} returns a non-false value.
 
 
-@defunx directory-for-each proc directory match
+@end defun
+@defun directory-for-each proc directory match
 Applies @var{proc} only to those filenames for which
 @code{(filename:match?? @var{match})} would return a non-false value
 (@pxref{Filenames, , , slib, SLIB}).
diff -urN slib-3b4/glob.txi slib-9999/glob.txi
--- slib-3b4/glob.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/glob.txi	2014-04-07 19:04:47.000000000 -0400
@@ -94,7 +94,8 @@
 returned.  @var{k} may be ommited, in which case it defaults to @code{1}.
 
 
-@defunx call-with-tmpnam proc suffix1 @dots{}
+@end defun
+@defun call-with-tmpnam proc suffix1 @dots{}
 Calls @var{proc} with strings returned by successive calls to @code{tmpnam},
 each with the corresponding @var{suffix} string appended.
 If @var{proc} returns, then any files named by the arguments to @var{proc} are
diff -urN slib-3b4/grapheps.ps slib-9999/grapheps.ps
--- slib-3b4/grapheps.ps	2011-12-23 00:24:37.000000000 -0500
+++ slib-9999/grapheps.ps	2014-01-21 20:04:22.000000000 -0500
@@ -22,7 +22,7 @@
 plotdict begin
 
 % Get dimensions
-/whole-page newpath clippath pathbbox newpath 4 array astore def
+4 array astore /whole-page exch def
 
 % Definitions so that internal assignments are bound before setting.
 /DATA 0 def
diff -urN slib-3b4/grapheps.scm slib-9999/grapheps.scm
--- slib-3b4/grapheps.scm	2011-12-23 00:24:37.000000000 -0500
+++ slib-9999/grapheps.scm	2014-01-21 19:59:39.000000000 -0500
@@ -108,7 +108,7 @@
 	(write-line (scheme->ps "%%BoundingBox: 0 0 " xsize " " ysize) oprt)
 	(write-line (scheme->ps "%%Title: " (or *plot-title* filename)) oprt)
 	(write-line (scheme->ps "%%EndComments: ") oprt)
-	;; (write-line (scheme->ps "0 0 " xsize " " ysize) oprt)
+	(write-line (scheme->ps "0 0 " xsize " " ysize) oprt)
 	(call-with-input-file (in-vicinity (library-vicinity) "grapheps.ps")
 	  (lambda (iprt)
 	    (do ((line (read-line iprt) (read-line iprt)))
diff -urN slib-3b4/grapheps.txi slib-9999/grapheps.txi
--- slib-3b4/grapheps.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/grapheps.txi	2014-04-07 19:04:47.000000000 -0400
@@ -252,10 +252,12 @@
 
 Lines are drawn @var{j}-on @var{k}-off.
 
-@defunx set-linedash j
+@end defun
+@defun set-linedash j
 Lines are drawn @var{j}-on @var{j}-off.
 
-@defunx set-linedash
+@end defun
+@defun set-linedash
 Turns off dashing.
 @end defun
 
@@ -434,13 +436,15 @@
 supplied, it specifies the number of points to evaluate @var{func} at.
 
 
-@defunx plot x1 x2 npts func1 func2 @dots{}
+@end defun
+@defun plot x1 x2 npts func1 func2 @dots{}
 Creates and displays an encapsulated PostScript graph of the
 one-argument functions @var{func1}, @var{func2}, ... over the range
 @var{x1} to @var{x2} at @var{npts} points.
 
 
-@defunx plot coords x-label y-label
+@end defun
+@defun plot coords x-label y-label
 @var{coords} is a list or vector of coordinates, lists of x and y
 coordinates.  @var{x-label} and @var{y-label} are strings with which
 to label the x and y axes.
diff -urN slib-3b4/mklibcat.scm slib-9999/mklibcat.scm
--- slib-3b4/mklibcat.scm	2011-12-23 00:24:37.000000000 -0500
+++ slib-9999/mklibcat.scm	2014-02-10 17:38:05.000000000 -0500
@@ -75,6 +75,7 @@
 	    (sierpinski		source		"sierpinski")
 	    (hilbert-fill	source		"phil-spc")
 	    (peano-fill		source		"peanosfc")
+	    (space-filling	source		"rmdsff")
 	    (soundex		source		"soundex")
 	    (hash-table		source		"hashtab")
 	    (logical		source		"logical")
diff -urN slib-3b4/phil-spc.scm slib-9999/phil-spc.scm
--- slib-3b4/phil-spc.scm	2011-12-23 00:24:37.000000000 -0500
+++ slib-9999/phil-spc.scm	2014-02-09 13:11:45.000000000 -0500
@@ -136,8 +136,9 @@
 ;;@defun integer->gray-code k
 ;;Converts @var{k} to a Gray code of the same @code{integer-length} as
 ;;@var{k}.
+;;@end defun
 ;;
-;;@defunx gray-code->integer k
+;;@defun gray-code->integer k
 ;;Converts the Gray code @var{k} to an integer of the same
 ;;@code{integer-length} as @var{k}.
 ;;
diff -urN slib-3b4/phil-spc.txi slib-9999/phil-spc.txi
--- slib-3b4/phil-spc.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/phil-spc.txi	2014-04-07 19:04:47.000000000 -0400
@@ -41,7 +41,8 @@
 0 and 1 will differ in the first element.
 
 
-@defunx integer->hilbert-coordinates scalar rank k
+@end defun
+@defun integer->hilbert-coordinates scalar rank k
 
 @var{scalar} must be a nonnegative integer of no more than
 @code{@var{rank}*@var{k}} bits.
@@ -80,8 +81,9 @@
 @defun integer->gray-code k
 Converts @var{k} to a Gray code of the same @code{integer-length} as
 @var{k}.
+@end defun
 
-@defunx gray-code->integer k
+@defun gray-code->integer k
 Converts the Gray code @var{k} to an integer of the same
 @code{integer-length} as @var{k}.
 
diff -urN slib-3b4/pnm.txi slib-9999/pnm.txi
--- slib-3b4/pnm.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/pnm.txi	2014-04-07 19:04:47.000000000 -0400
@@ -50,7 +50,8 @@
 @var{path}.  @var{array} is returned.
 
 
-@defunx pnm:image-file->array path
+@end defun
+@defun pnm:image-file->array path
 
 @code{pnm:image-file->array} creates and returns an array with the
 @dfn{portable bitmap graphics} file named by @var{path} read into it.
diff -urN slib-3b4/random.txi slib-9999/random.txi
--- slib-3b4/random.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/random.txi	2014-04-07 19:04:47.000000000 -0400
@@ -34,7 +34,8 @@
 Returns a new copy of argument @var{state}.
 
 
-@defunx copy-random-state
+@end defun
+@defun copy-random-state
 Returns a new copy of @code{*random-state*}.
 @end defun
 
diff -urN slib-3b4/rmdsff.scm slib-9999/rmdsff.scm
--- slib-3b4/rmdsff.scm	1969-12-31 19:00:00.000000000 -0500
+++ slib-9999/rmdsff.scm	2014-04-02 09:09:08.000000000 -0400
@@ -0,0 +1,317 @@
+;;;; "rmdsff.scm" Space-filling functions and their inverses.
+;;; Copyright (C) 2013, 2014 Aubrey Jaffer
+;
+;Permission to copy this software, to modify it, to redistribute it,
+;to distribute modified versions, and to use it for any purpose is
+;granted, subject to the following restrictions and understandings.
+;
+;1.  Any copy made of this software must include this copyright notice
+;in full.
+;
+;2.  I have made no warranty or representation that the operation of
+;this software will be error-free, and I am under no obligation to
+;provide any services, by way of maintenance, update, or otherwise.
+;
+;3.  In conjunction with products arising from the use of this
+;material, there shall be no use of my name in any advertising,
+;promotional, or sales literature without prior written consent in
+;each case.
+
+(require 'array)
+
+;;@code{(require 'space-filling)}
+;;@ftindex space-filling
+
+;;@ The algorithms and cell properties are described in
+;;@url{http://people.csail.mit.edu/jaffer/Geometry/RMDSFF.pdf}
+
+;;; A cell is an object encapsulating the information about a
+;;; Hamiltonian path on a rectangular grid of side^rank nodes.
+;;; Here are the accessors for a cell:
+(define cell-type caar)
+(define cell-side cadar)
+(define cell-rank caddar)
+(define (cell-index cell crds) (apply array-ref (cadadr cell) crds))
+(define (cell-coords cell t) (vector-ref (caadr cell) t))
+(define (cell-entry cell t) (vector-ref (caddr cell) t))
+(define (cell-exit cell t) (vector-ref (cadddr cell) t))
+(define (cell-rotation cell t) (vector-ref (cadddr (cdr cell)) t))
+
+;;@args type rank side precession
+;;@args type rank side
+;;@args type rank
+;;
+;;@1 must be the symbol @code{diagonal}, @code{adjacent}, or
+;;@code{centered}.  @2 must be an integer larger than 1.  @3, if
+;;present, must be an even integer larger than 1 if @1 is
+;;@code{adjacent} or an odd integer larger than 2 otherwise; @3
+;;defaults to the smallest value.  @4, if present, must be an integer
+;;between 0 and @3^@2-1; it is relevant only when @1 is
+;;@code{diagonal} or @code{centered}.
+;;
+;;@args Hamiltonian-path-vector precession
+;;@args Hamiltonian-path-vector
+;;
+;;@1 must be a vector of @var{side}^@var{rank} lists of @var{rank} of
+;;integers encoding the coordinate positions of a Hamiltonian path on
+;;the @var{rank}-dimensional grid of points starting and ending on
+;;corners of the grid.  The starting corner must be the origin
+;;(all-zero coordinates). If the side-length is even, then the ending
+;;corner must be non-zero in only one coordinate; otherwise, the
+;;ending corner must be the furthest diagonally opposite corner from
+;;the origin.
+;;
+;;@code{make-cell} returns a data object suitable for passing as the
+;;first argument to @code{integer->coordinates} or
+;;@code{coordinates->integer}.
+(define (make-cell arg1 . args)
+  (define (make-serpentine-path rank s)
+    (let loop ((path '(())) (rnk (+ -1 rank)))
+      (if (negative? rnk) path
+	  (loop (let iloop ((seq '()) (sc (+ -1 s)))
+		  (if (negative? sc)
+		      seq
+		      (iloop (append (map (lambda (coords) (cons sc coords))
+					  (if (odd? sc) (reverse path) path))
+				     seq)
+			     (+ -1 sc))))
+		(+ -1 rnk)))))
+  (if (list? arg1) (set! arg1 (list->vector arg1)))
+  (cond
+   ((> (length args) 3)
+    (slib:error 'make-cell 'extra 'arguments 'not 'handled args))
+   ((vector? arg1)
+    (let ((path arg1)
+	  (precession (and (not (null? args)) (car args))))
+      (define frst (vector-ref path 0))
+      (define len (vector-length path))
+      (define s-1 (apply max (apply append (vector->list path))))
+      (let* ((len-1 (+ -1 len))
+	     (last (vector-ref path len-1))
+	     (d (length frst)))
+	;; returns index of first non-zero in LST
+	(define (first-non-zero lst)
+	  (define pos (lambda (n lst)
+			(cond ((zero? (car lst)) (pos (+ 1 n) (cdr lst)))
+			      (else n))))
+	  (pos 0 lst))
+	;; returns the traversal direction of the sub-path.
+	(define (U_e N t)
+	  (if (= t len-1)
+	      (map - (vector-ref path t) (vector-ref path (- t 1)))
+	      (let ((dH_i+1 (map - (vector-ref path (+ t 1)) (vector-ref path t))))
+		(define dotpr (apply + (map * N dH_i+1)))
+		(define csum (apply + dH_i+1))
+		(if (or (and (zero? dotpr) (= 1 csum)) (= dotpr csum -1))
+		    dH_i+1
+		    (map - (vector-ref path t) (vector-ref path (- t 1)))
+		    ))))
+	(define (flip-direction dir cdir)
+	  (map (lambda (px c) (modulo (+ px c) 2)) dir cdir))
+	(define (path-diag? path)
+	  (define prev frst)
+	  (for-each (lambda (lst)
+		      (if (not (= d (length lst)))
+			  (slib:error 'non-uniform 'ranks frst lst)))
+		    (vector->list path))
+	  (for-each (lambda (cs)
+		      (if (not (= 1 (apply + (map abs (map - prev cs)))))
+			  (slib:error 'bad 'step prev cs))
+		      (set! prev cs))
+		    (cdr (vector->list path)))
+	  (cond ((not (zero? (apply + frst))) (slib:error 'strange 'start frst))
+		((not (= d (length last))) (slib:error 'non-uniform 'lengths path))
+		((apply = s-1 last) #t)
+		((and (= s-1 (apply + last))) #f)
+		(else (slib:error 'strange 'net-travel frst last))))
+	(define diag? (path-diag? path))
+	(define entries (make-vector len (vector-ref path 0)))
+	(define exits (make-vector
+		       len (if diag?
+			       (map (lambda (c) (quotient c s-1)) last)
+			       (vector-ref path 1))))
+	(define rotations (make-vector len 0))
+	(define ipath (apply make-array
+			     (A:fixZ32b -1)
+			     (vector->list (make-vector d (+ 1 s-1)))))
+	(define ord 0)
+	(for-each (lambda (coords)
+		    (apply array-set! ipath ord coords)
+		    (set! ord (+ 1 ord)))
+		  (vector->list path))
+	(let lp ((t 1)
+		 (prev-X (if diag?
+			     (map (lambda (c) 1) (vector-ref entries 0))
+			     (vector-ref path 1))))
+	  (cond ((> t len-1)
+		 (if (not (equal? (vector-ref exits len-1)
+				  (map (lambda (c) (quotient c s-1)) last)))
+		     (slib:warn (list (if diag? 'diagonal 'adjacent)
+				      (+ 1 s-1) d precession)
+				'bad 'last 'exit
+				(vector-ref exits len-1) 'should 'be
+				(map (lambda (c) (quotient c s-1)) last)))
+		 (let ((ord 0)
+		       (h (first-non-zero last)))
+		   (for-each
+		    (lambda (coords)
+		      (vector-set! rotations
+				   ord
+				   (modulo
+				    (cond ((not diag?)
+					   (- h (first-non-zero
+						 (map -
+						      (vector-ref exits ord)
+						      (vector-ref entries ord)))))
+					  (precession (+ precession ord))
+					  (else 0))
+				    d))
+		      (set! ord (+ 1 ord)))
+		    (vector->list path)))
+		 (list (list (if diag? 'diagonal 'adjacent)
+			     (+ 1 s-1)
+			     d
+			     precession)
+		       (list path ipath)
+		       entries
+		       exits
+		       rotations
+		       ))
+		(else
+		 (let ((N (flip-direction
+			   prev-X
+			   (map - (vector-ref path t)
+				(vector-ref path (- t 1))))))
+		   (define X (if diag?
+				 (map (lambda (tn) (- 1 tn)) N)
+				 (flip-direction N (U_e N t))))
+		   (vector-set! entries t N)
+		   (vector-set! exits t X)
+		   (lp (+ 1 t) X))))))))
+   ((< (car args) 2)
+    (slib:error 'make-cell 'rank 'too 'small (car args)))
+   (else
+    (case arg1
+      ((center centered)
+       (let ((cell (make-cell (make-serpentine-path
+			       (car args)
+			       (if (null? (cdr args)) 3 (cadr args)))
+			      (if (= 3 (length args)) (caddr args) #f))))
+	 (if (not (eq? 'diagonal (cell-type cell)))
+	     (slib:error 'make-cell 'centered 'must 'be 'diagonal (car cell)))
+	 (set-car! (car cell) 'centered)
+	 cell))
+      ((diagonal opposite)
+       (make-cell (make-serpentine-path
+		   (car args)
+		   (if (null? (cdr args)) 3 (cadr args)))
+		  (if (= 3 (length args)) (caddr args) #f)))
+      ((adjacent)
+       (make-cell (make-serpentine-path
+		   (car args)
+		   (if (null? (cdr args)) 2 (cadr args)))
+		  (if (= 3 (length args)) (caddr args) #f)))
+      (else
+       (slib:error 'make-cell 'unknown 'cell 'type arg1))))))
+
+;;@ Hilbert, Peano, and centered Peano cells are generated
+;;respectively by:
+;;@example
+;;(make-cell 'adjacent @var{rank} 2)   ; Hilbert
+;;(make-cell 'diagonal @var{rank} 3)   ; Peano
+;;(make-cell 'centered @var{rank} 3)   ; centered Peano
+;;@end example
+
+;; Positive k rotates left
+(define (rotate-list lst k)
+  (define len (length lst))
+  (cond ((<= len 1) lst)
+	(else
+	 (set! k (modulo k len))
+	 (if (zero? k)
+	     lst
+	     (let ((ans (list (car lst))))
+	       (do ((ls (cdr lst) (cdr ls))
+		    (tail ans (cdr tail))
+		    (k (+ -1 k) (+ -1 k)))
+		   ((<= k 0)
+		    (append ls ans))
+		 (set-cdr! tail (list (car ls)))))))))
+
+;;@ In the conversion procedures, if the cell is @code{diagonal} or
+;;@code{adjacent}, then the coordinates and scalar must be nonnegative
+;;integers.  If @code{centered}, then the integers can be negative.
+
+;;@body
+;;@0 converts the integer @2 to a list of coordinates according to @1.
+(define (integer->coordinates cell u)
+  (define umag (case (cell-type cell)
+		 ((centered) (* (abs u) 2))
+		 (else u)))
+  (define d (cell-rank cell))
+  (define s (cell-side cell))
+  (let* ((s^d (expt s d))
+	 (s^d^2 (expt s^d d)))
+    (define (align V t sde)
+      (map (lambda (Vj Nj) (if (zero? Nj) Vj (- sde Vj)))
+	   (rotate-list V (cell-rotation cell t))
+	   (cell-entry cell t)))
+    (define (rec u m w)
+      (if (positive? w)
+	  (let ((t (quotient u m)))
+	    (map +
+		 (map (lambda (y) (* y w)) (cell-coords cell t))
+		 (align (rec (modulo u m) (quotient m s^d) (quotient w s))
+			t
+			(- w 1))))
+	  (cell-coords cell 0)))
+    (do ((uscl 1 (* uscl s^d^2))
+	 (cscl 1 (* cscl s^d)))
+	((> uscl umag)
+	 (case (cell-type cell)
+	   ((centered)
+	    (let ((cscl/2 (quotient cscl 2)))
+	      (map (lambda (c) (- c cscl/2))
+		   (rec (+ u (quotient uscl 2))
+			(quotient uscl s^d)
+			(quotient cscl s)))))
+	   (else (rec u (quotient uscl s^d) (quotient cscl s))))))))
+
+;;@body
+;;@0 converts the list of coordinates @2 to an integer according to @1.
+(define (coordinates->integer cell V)
+  (define maxc (case (cell-type cell)
+		 ((centered) (* 2 (apply max (map abs V))))
+		 (else (apply max V))))
+  (define d (cell-rank cell))
+  (define s (cell-side cell))
+  (let* ((s^d (expt s d))
+	 (s^d^2 (expt s^d d)))
+    (define (align^-1 V t sde)
+      (rotate-list (map (lambda (Vj Nj) (if (zero? Nj) Vj (- sde Vj)))
+			V
+			(cell-entry cell t))
+		   (- (cell-rotation cell t))))
+    (define (rec u V w)
+      (if (positive? w)
+	  (let ((dig (cell-index cell (map (lambda (c) (quotient c w)) V))))
+	    (rec (+ dig (* s^d u))
+		 (align^-1 (map (lambda (cx) (modulo cx w)) V)
+			   dig
+			   (- w 1))
+		 (quotient w s)))
+	  u))
+    (do ((uscl 1 (* uscl s^d^2))
+	 (cscl 1 (* cscl s^d)))
+	((> cscl maxc)
+	 (case (cell-type cell)
+	   ((centered)
+	    (let ((cscl/2 (quotient cscl 2)))
+	      (- (rec 0
+		      (map (lambda (c) (+ c cscl/2)) V)
+		      (quotient cscl s))
+		 (quotient uscl 2))))
+	   (else (rec 0 V (quotient cscl s))))))))
+
+;;@var{coordinates->integer} and @var{integer->coordinates} are
+;;inverse functions when passed the same @var{cell} argument.
diff -urN slib-3b4/rmdsff.txi slib-9999/rmdsff.txi
--- slib-3b4/rmdsff.txi	1969-12-31 19:00:00.000000000 -0500
+++ slib-9999/rmdsff.txi	2014-04-07 19:04:47.000000000 -0400
@@ -0,0 +1,68 @@
+@code{(require 'space-filling)}
+@ftindex space-filling
+
+The algorithms and cell properties are described in
+@url{http://people.csail.mit.edu/jaffer/Geometry/RMDSFF.pdf}
+
+
+@defun make-cell type rank side precession
+
+
+@defunx make-cell type rank side
+
+@defunx make-cell type rank
+
+@var{type} must be the symbol @code{diagonal}, @code{adjacent}, or
+@code{centered}.  @var{rank} must be an integer larger than 1.  @var{side}, if
+present, must be an even integer larger than 1 if @var{type} is
+@code{adjacent} or an odd integer larger than 2 otherwise; @var{side}
+defaults to the smallest value.  @var{precession}, if present, must be an integer
+between 0 and @var{side}^@var{rank}-1; it is relevant only when @var{type} is
+@code{diagonal} or @code{centered}.
+
+
+@end defun
+@defun make-cell Hamiltonian-path-vector precession
+
+@defunx make-cell Hamiltonian-path-vector
+
+@var{type} must be a vector of @var{side}^@var{rank} lists of @var{rank} of
+integers encoding the coordinate positions of a Hamiltonian path on
+the @var{rank}-dimensional grid of points starting and ending on
+corners of the grid.  The starting corner must be the origin
+(all-zero coordinates). If the side-length is even, then the ending
+corner must be non-zero in only one coordinate; otherwise, the
+ending corner must be the furthest diagonally opposite corner from
+the origin.
+
+@code{make-cell} returns a data object suitable for passing as the
+first argument to @code{integer->coordinates} or
+@code{coordinates->integer}.
+@end defun
+
+Hilbert, Peano, and centered Peano cells are generated
+respectively by:
+@example
+(make-cell 'adjacent @var{rank} 2)   ; Hilbert
+(make-cell 'diagonal @var{rank} 3)   ; Peano
+(make-cell 'centered @var{rank} 3)   ; centered Peano
+@end example
+
+In the conversion procedures, if the cell is @code{diagonal} or
+@code{adjacent}, then the coordinates and scalar must be nonnegative
+integers.  If @code{centered}, then the integers can be negative.
+
+
+@defun integer->coordinates cell u
+
+@code{integer->coordinates} converts the integer @var{u} to a list of coordinates according to @var{cell}.
+@end defun
+
+
+@defun coordinates->integer cell v
+
+@code{coordinates->integer} converts the list of coordinates @var{v} to an integer according to @var{cell}.
+@end defun
+
+@var{coordinates->integer} and @var{integer->coordinates} are
+inverse functions when passed the same @var{cell} argument.
diff -urN slib-3b4/schmooz.scm slib-9999/schmooz.scm
--- slib-3b4/schmooz.scm	2011-12-23 00:24:37.000000000 -0500
+++ slib-9999/schmooz.scm	2014-02-10 10:36:13.000000000 -0500
@@ -306,22 +306,32 @@
 				  #\!))
 		     '("deffn {Procedure}" "deffnx {Procedure}" "deffn")
 		     '("defun" "defunx" "defun"))))))
+    (define in-body? #f)
     (out-header args (car ops))
     (let loop ((xdefs xdefs))
       (cond ((pair? xdefs)
 	     (out-header (car xdefs) (cadr ops))
 	     (loop (cdr xdefs)))))
     (for-each (lambda (subl)
+		;;(print 'in-body? in-body? 'subl subl)
 		(out 0 (car subl))
 		(for-each (lambda (l)
 			    (case (car l)
 			      ((@dfn)
 			       (out-cindex (cadr l)))
 			      ((@args)
-			       (out-header
-				(cons (car args) (cdr l))
-				(cadr ops)))))
-			  (cdr subl)))
+			       (cond
+				(in-body?
+				 (out 0 "@end " (caddr ops))
+				 (set! in-body? #f)
+				 (out-header (cons (car args) (cdr l))
+					     (car ops)))
+				(else
+				 (out-header (cons (car args) (cdr l))
+					     (cadr ops)))))))
+			  (cdr subl))
+		(if (not (equal? "" (car subl)))
+		    (set! in-body? #t)))
 	      (map (lambda (bl)
 		     (substitute-macs bl mac-list))
 		   body))
@@ -344,9 +354,7 @@
 			      (else
 			       (report "bad macro" l))))
 			  (cdr subl)))
-	      (map (lambda (bl)
-		     (substitute-macs bl mac-list))
-		   body))
+	      (map (lambda (bl) (substitute-macs bl mac-list)) body))
     (out 0 "@end defvar")
     (out 0)))
 
diff -urN slib-3b4/schmooz.texi slib-9999/schmooz.texi
--- slib-3b4/schmooz.texi	2001-10-15 00:34:18.000000000 -0400
+++ slib-9999/schmooz.texi	2014-02-08 14:12:44.000000000 -0500
@@ -17,8 +17,9 @@
 top-level comments containing schmooz commands from @var{filename}.scm
 and writes the converted Texinfo source to a file named
 @var{filename}.txi.
+@end deffn
 
-@deffnx Procedure schmooz filename@r{.texi} @dots{}
+@deffn Procedure schmooz filename@r{.texi} @dots{}
 @deffnx Procedure schmooz filename@r{.tex} @dots{}
 @deffnx Procedure schmooz filename@r{.txi} @dots{}
 @var{Filename} should be a string naming an existing file containing
diff -urN slib-3b4/slib.info slib-9999/slib.info
--- slib-3b4/slib.info	2013-05-12 00:47:56.000000000 -0400
+++ slib-9999/slib.info	2014-04-07 19:04:48.000000000 -0400
@@ -2306,7 +2306,7 @@
 
  -- Syntax: object `((NAME SELF ARG ...) BODY)' ...
      Returns an object (an instance of the object system) with
-     operations.  Invoking `(NAME OBJECT ARG ...' executes the BODY of
+     operations.  Invoking `(NAME OBJECT ARG ...)' executes the BODY of       |
      the OBJECT with SELF bound to OBJECT and with argument(s) ARG....
 
  -- Syntax: object-with-ancestors `(('ancestor1 init1`)' ...`)'
@@ -3624,8 +3624,7 @@
 
         * A character that specifies the conversion to be applied.
 
-4.3.2.1 Exact Conversions
-.........................
+     Exact Conversions                                                        |
 
     `b', `B'
           Print an integer as an unsigned binary number.
@@ -3648,8 +3647,7 @@
           prints using the digits `0123456789abcdef'.  `%X' prints
           using the digits `0123456789ABCDEF'.
 
-4.3.2.2 Inexact Conversions
-...........................
+     Inexact Conversions                                                      |
 
     `f'
           Print a floating-point number in fixed-point notation.
@@ -3673,8 +3671,7 @@
           dot between number and prefix, `%k' does not.
 
 
-4.3.2.3 Other Conversions
-.........................
+     Other Conversions                                                        |
 
     `c'
           Print a single character.  The `-' flag is the only one which
@@ -4369,6 +4366,7 @@
      yielded by the PROC is(are) returned.  K may be ommited, in which
      case it defaults to `1'.
 
+
  -- Function: call-with-tmpnam proc suffix1 ...
      Calls PROC with strings returned by successive calls to `tmpnam',
      each with the corresponding SUFFIX string appended.  If PROC
@@ -5320,6 +5318,7 @@
      which is not a member of the set.  This character is left on the
      stream.  All the read characters are returned in a string.
 
+
  -- Function: ssax:next-token-of pred port
      Reads characters from the PORT for which PRED (a procedure of one
      argument) returns non-#f.  The reading stops at the first
@@ -7225,6 +7224,7 @@
  -- Function: copy-random-state state
      Returns a new copy of argument STATE.
 
+
  -- Function: copy-random-state
      Returns a new copy of `*random-state*'.
 
@@ -7896,9 +7896,11 @@
  -- Function: set-linedash j k
      Lines are drawn J-on K-off.
 
+
  -- Function: set-linedash j
      Lines are drawn J-on J-off.
 
+
  -- Function: set-linedash
      Turns off dashing.
 
@@ -8026,11 +8028,13 @@
      range X1 to X2.  If the optional integer argument NPTS is
      supplied, it specifies the number of points to evaluate FUNC at.
 
+                                                                              |
  -- Function: plot x1 x2 npts func1 func2 ...                                 |
      Creates and displays an encapsulated PostScript graph of the
      one-argument functions FUNC1, FUNC2, ... over the range X1 to X2
      at NPTS points.
 
+
  -- Function: plot coords x-label y-label
      COORDS is a list or vector of coordinates, lists of x and y
      coordinates.  X-LABEL and Y-LABEL are strings with which to label
@@ -8554,6 +8558,7 @@
      CENTER must be a list or vector of three numbers.  Returns an
      upward pointing metallic arrow centered at CENTER.
 
+
  -- Function: solid:arrow
      Returns an upward pointing metallic arrow centered at the origin.
 
@@ -8816,6 +8821,7 @@
  -- Function: color:l*a*b* L* a* b* white-point
      Returns the L*a*b* color composed of L*, A*, B* with WHITE-POINT.
 
+
  -- Function: color:l*a*b* L* a* b*
      Returns the L*a*b* color composed of L*, A*, B*.  If the
      coordinates do not encode a valid L*a*b* color, then an error is
@@ -8825,6 +8831,7 @@
      Returns the list of 3 numbers encoding COLOR in L*a*b* with
      WHITE-POINT.
 
+
  -- Function: color->l*a*b* color
      Returns the list of 3 numbers encoding COLOR in L*a*b*.
 
@@ -8840,6 +8847,7 @@
  -- Function: color:l*u*v* L* u* v* white-point
      Returns the L*u*v* color composed of L*, U*, V* with WHITE-POINT.
 
+
  -- Function: color:l*u*v* L* u* v*
      Returns the L*u*v* color composed of L*, U*, V*.  If the
      coordinates do not encode a valid L*u*v* color, then an error is
@@ -8849,6 +8857,7 @@
      Returns the list of 3 numbers encoding COLOR in L*u*v* with
      WHITE-POINT.
 
+
  -- Function: color->l*u*v* color
      Returns the list of 3 numbers encoding COLOR in L*u*v*.
 
@@ -8892,6 +8901,7 @@
  -- Function: color:l*c*h L* C* h white-point
      Returns the L*C*h color composed of L*, C*, H with WHITE-POINT.
 
+
  -- Function: color:l*c*h L* C* h
      Returns the L*C*h color composed of L*, C*, H.  If the coordinates
      do not encode a valid L*C*h color, then an error is signaled.
@@ -8900,6 +8910,7 @@
      Returns the list of 3 numbers encoding COLOR in L*C*h with
      WHITE-POINT.
 
+
  -- Function: color->l*c*h color
      Returns the list of 3 numbers encoding COLOR in L*C*h.
 
@@ -8974,9 +8985,11 @@
  -- Function: color:e-srgb 10 r g b
      Returns the e-sRGB10 color composed of integers R, G, B.
 
+
  -- Function: color:e-srgb 12 r g b
      Returns the e-sRGB12 color composed of integers R, G, B.
 
+
  -- Function: color:e-srgb 16 r g b
      Returns the e-sRGB16 color composed of integers R, G, B.  If the
      coordinates do not encode a valid e-sRGB color, then an error is
@@ -9404,6 +9417,7 @@
      BASE-TABLE-TYPE.  `color-dictionary' returns the read-only table
      NAME in database NAME if it exists; #f otherwise.
 
+
  -- Function: color-dictionary name rdb
      RDB must be an open relational database or a string naming a
      relational database file; and the symbol NAME a table therein.
@@ -10181,9 +10195,11 @@
  -- Function: matrix:product m1 m2
      Returns the product of matrices M1 and M2.
 
+
  -- Function: matrix:product m1 z
      Returns matrix M1 times scalar Z.
 
+
  -- Function: matrix:product z m1
      Returns matrix M1 times scalar Z.
 
@@ -10303,6 +10319,7 @@
      Returns an open relational database associated with RDB.  The
      database will be opened with base-table type BASE-TABLE-TYPE).
 
+
  -- Function: open-database rdb
      Returns an open relational database associated with RDB.
      `open-database' will attempt to deduce the correct base-table-type.
@@ -11337,7 +11354,6 @@
      default to it; `browse' prints the records of the table named by
      the symbol TABLE-NAME.
 
-
 
 File: slib-3b4.info,  Node: Relational Infrastructure,  Next: Weight-Balanced Trees,  Prev: Relational Database,  Up: Database Packages
                                                                               |
@@ -13243,6 +13259,7 @@
      ARRAY must be the correct size and type for PATH.  ARRAY is
      returned.
 
+
  -- Function: pnm:image-file->array path
      `pnm:image-file->array' creates and returns an array with the
      "portable bitmap graphics" file named by PATH read into it.  
@@ -13906,7 +13923,7 @@
 * Sorting::                     'sort
 * Topological Sort::            Keep your socks on.
 * Hashing::                     'hash
-* Space-Filling Curves::        'hilbert and 'sierpinski
+* Space-Filling Curves::        'space-filling and 'sierpinski
 * Soundex::                     Dimension Reduction of Last Names
 * String Search::               Also Search from a Port.
 * Sequence Comparison::         'diff and longest-common-subsequence
@@ -14740,14 +14757,73 @@
 
 * Menu:
 
-* Hilbert Space-Filling Curve::  Non-negative coordinates
-* Peano Space-Filling Curve::   Integer coordinates
-* Sierpinski Curve::
+* Multidimensional Space-Filling Curves::  Includes Hilbert and Peano curves
+* Hilbert Space-Filling Curve::            Legacy
+* Peano Space-Filling Curve::              Legacy
+* Sierpinski Curve::                       Rank-2 to scalar
 
 
-File: slib-3b4.info,  Node: Hilbert Space-Filling Curve,  Next: Peano Space-Filling Curve,  Prev: Space-Filling Curves,  Up: Space-Filling Curves
+File: slib-3b4.info,  Node: Multidimensional Space-Filling Curves,  Next: Hilbert Space-Filling Curve,  Prev: Space-Filling Curves,  Up: Space-Filling Curves
+                                                                              |
+7.2.7.1 Multidimensional Space-Filling Curves                                 |
+.............................................                                 |
+                                                                              |
+`(require 'space-filling)'                                                    |
+                                                                              |
+  The algorithms and cell properties are described in                         |
+`http://people.csail.mit.edu/jaffer/Geometry/RMDSFF.pdf'                      |
+                                                                              |
+ -- Function: make-cell type rank side precession                             |
+ -- Function: make-cell type rank side                                        |
+ -- Function: make-cell type rank                                             |
+     TYPE must be the symbol `diagonal', `adjacent', or `centered'.           |
+     RANK must be an integer larger than 1.  SIDE, if present, must be        |
+     an even integer larger than 1 if TYPE is `adjacent' or an odd            |
+     integer larger than 2 otherwise; SIDE defaults to the smallest           |
+     value.  PRECESSION, if present, must be an integer between 0 and         |
+     SIDE^RANK-1; it is relevant only when TYPE is `diagonal' or              |
+     `centered'.                                                              |
+                                                                              |
+                                                                              |
+ -- Function: make-cell Hamiltonian-path-vector precession                    |
+ -- Function: make-cell Hamiltonian-path-vector                               |
+     TYPE must be a vector of SIDE^RANK lists of RANK of integers             |
+     encoding the coordinate positions of a Hamiltonian path on the           |
+     RANK-dimensional grid of points starting and ending on corners of        |
+     the grid.  The starting corner must be the origin (all-zero              |
+     coordinates). If the side-length is even, then the ending corner         |
+     must be non-zero in only one coordinate; otherwise, the ending           |
+     corner must be the furthest diagonally opposite corner from the          |
+     origin.                                                                  |
+                                                                              |
+     `make-cell' returns a data object suitable for passing as the            |
+     first argument to `integer->coordinates' or `coordinates->integer'.      |
+                                                                              |
+  Hilbert, Peano, and centered Peano cells are generated respectively         |
+by:                                                                           |
+     (make-cell 'adjacent RANK 2)   ; Hilbert                                 |
+     (make-cell 'diagonal RANK 3)   ; Peano                                   |
+     (make-cell 'centered RANK 3)   ; centered Peano                          |
+                                                                              |
+  In the conversion procedures, if the cell is `diagonal' or                  |
+`adjacent', then the coordinates and scalar must be nonnegative               |
+integers.  If `centered', then the integers can be negative.                  |
+                                                                              |
+ -- Function: integer->coordinates cell u                                     |
+     `integer->coordinates' converts the integer U to a list of               |
+     coordinates according to CELL.                                           |
+                                                                              |
+ -- Function: coordinates->integer cell v                                     |
+     `coordinates->integer' converts the list of coordinates V to an          |
+     integer according to CELL.                                               |
+                                                                              |
+  COORDINATES->INTEGER and INTEGER->COORDINATES are inverse functions         |
+when passed the same CELL argument.                                           |
+                                                                              |
+
+File: slib-3b4.info,  Node: Hilbert Space-Filling Curve,  Next: Peano Space-Filling Curve,  Prev: Multidimensional Space-Filling Curves,  Up: Space-Filling Curves
                                                                               |
-7.2.7.1 Hilbert Space-Filling Curve
+7.2.7.2 Hilbert Space-Filling Curve                                           |
 ...................................
 
 `(require 'hilbert-fill)' 
@@ -14779,6 +14855,7 @@
      `integer->hilbert-coordinates' for SCALAR arguments 0 and 1 will
      differ in the first element.
 
+
  -- Function: integer->hilbert-coordinates scalar rank k
      SCALAR must be a nonnegative integer of no more than `RANK*K' bits.
 
@@ -14793,7 +14870,7 @@
      Returns an exact non-negative integer corresponding to COORDS, a
      list of non-negative integer coordinates.
 
-7.2.7.2 Gray code
+7.2.7.3 Gray code                                                             |
 .................
 
 A "Gray code" is an ordering of non-negative integers in which exactly
@@ -14829,7 +14906,7 @@
      of `(integer->gray-code k1)' and `(integer->gray-code k2)' will
      return the same value as the corresponding predicate of K1 and K2.
 
-7.2.7.3 Bitwise Lamination
+7.2.7.4 Bitwise Lamination                                                    |
 ..........................
 
  -- Function: delaminate-list count ks
@@ -14847,7 +14924,7 @@
 
 File: slib-3b4.info,  Node: Peano Space-Filling Curve,  Next: Sierpinski Curve,  Prev: Hilbert Space-Filling Curve,  Up: Space-Filling Curves
                                                                               |
-7.2.7.4 Peano Space-Filling Curve
+7.2.7.5 Peano Space-Filling Curve                                             |
 .................................
 
 `(require 'peano-fill)' 
@@ -14875,7 +14952,7 @@
 
 File: slib-3b4.info,  Node: Sierpinski Curve,  Prev: Peano Space-Filling Curve,  Up: Space-Filling Curves
                                                                               |
-7.2.7.5 Sierpinski Curve
+7.2.7.6 Sierpinski Curve                                                      |
 ........................
 
 `(require 'sierpinski)' 
@@ -16484,10 +16561,12 @@
      the filenames is unspecified.  The value returned by
      `directory-for-each' is unspecified.
 
+
  -- Function: directory-for-each proc directory pred
      Applies PROC only to those filenames for which the procedure PRED
      returns a non-false value.
 
+
  -- Function: directory-for-each proc directory match
      Applies PROC only to those filenames for which `(filename:match??
      MATCH)' would return a non-false value (*note Filenames:
@@ -17762,7 +17841,7 @@
 * <=?:                                   Rev2 Procedures.     (line  46)
 * <?:                                    Rev2 Procedures.     (line  45)
 * =:                                     Hilbert Space-Filling Curve.
-                                                              (line  72)
+                                                              (line  73)      |
 * =?:                                    Rev2 Procedures.     (line  47)
 * >=?:                                   Rev2 Procedures.     (line  49)
 * >?:                                    Rev2 Procedures.     (line  48)
@@ -17792,7 +17871,7 @@
 * absolute-path?:                        URI.                 (line 102)
 * absolute-uri?:                         URI.                 (line  98)
 * add-command-tables:                    Database Extension.  (line  11)
-* add-domain:                            Using Databases.     (line 131)
+* add-domain:                            Using Databases.     (line 132)
 * add-domain on relational-database:     Command Intrinsics.  (line  10)
 * add-macro-support:                     Within-database.     (line  52)
 * add-process!:                          Multi-Processing.    (line  14)
@@ -17845,8 +17924,8 @@
 * atan:                                  Irrational Real Functions.
                                                               (line  22)
 * atom?:                                 Non-List functions.  (line  30)
-* attlist-add:                           Parsing XML.         (line 451)
-* attlist-remove-top:                    Parsing XML.         (line 456)
+* attlist-add:                           Parsing XML.         (line 452)
+* attlist-remove-top:                    Parsing XML.         (line 457)
 * batch:call-with-output-script:         Batch.               (line  47)
 * batch:command:                         Batch.               (line  64)
 * batch:comment:                         Batch.               (line  95)
@@ -17934,7 +18013,7 @@
 * clear-sky-color-xyy:                   Daylight.            (line  84)
 * clip-to-rect:                          Rectangles.          (line  36)
 * close-base on base-table:              The Base.            (line  60)
-* close-database:                        Using Databases.     (line  89)
+* close-database:                        Using Databases.     (line  90)
 * close-database on relational-database: Database Operations. (line  20)
 * close-port:                            Input/Output.        (line  47)
 * close-table on relational-table:       Table Administration.
@@ -17947,14 +18026,14 @@
 * coerce:                                Type Coercion.       (line  12)
 * collection?:                           Collections.         (line  36)
 * color->ciexyz:                         Color Spaces.        (line  34)
-* color->e-srgb:                         Color Spaces.        (line 252)
-* color->l*a*b*:                         Color Spaces.        (line  91)
-* color->l*c*h:                          Color Spaces.        (line 166)
-* color->l*u*v*:                         Color Spaces.        (line 115)
+* color->e-srgb:                         Color Spaces.        (line 260)
+* color->l*a*b*:                         Color Spaces.        (line  92)
+* color->l*c*h:                          Color Spaces.        (line 171)
+* color->l*u*v*:                         Color Spaces.        (line 118)
 * color->rgb709:                         Color Spaces.        (line  55)
-* color->srgb:                           Color Spaces.        (line 209)
+* color->srgb:                           Color Spaces.        (line 215)
 * color->string:                         Color Data-Type.     (line  95)
-* color->xrgb:                           Color Spaces.        (line 212)
+* color->xrgb:                           Color Spaces.        (line 218)
 * color-dictionaries->lookup:            Color Names.         (line  33)
 * color-dictionary:                      Color Names.         (line  40)
 * color-name->color:                     Color Names.         (line  27)
@@ -17963,13 +18042,13 @@
 * color-space:                           Color Data-Type.     (line  43)
 * color-white-point:                     Color Data-Type.     (line  51)
 * color:ciexyz:                          Color Spaces.        (line  30)
-* color:e-srgb:                          Color Spaces.        (line 241)
+* color:e-srgb:                          Color Spaces.        (line 247)
 * color:l*a*b*:                          Color Spaces.        (line  83)
-* color:l*c*h:                           Color Spaces.        (line 159)
-* color:l*u*v*:                          Color Spaces.        (line 107)
+* color:l*c*h:                           Color Spaces.        (line 163)
+* color:l*u*v*:                          Color Spaces.        (line 109)
 * color:linear-transform:                Color Conversions.   (line  27)
 * color:rgb709:                          Color Spaces.        (line  51)
-* color:srgb:                            Color Spaces.        (line 200)
+* color:srgb:                            Color Spaces.        (line 206)
 * color?:                                Color Data-Type.     (line   9)
 * column-domains on relational-table:    Table Administration.
                                                               (line   9)
@@ -17992,6 +18071,8 @@
 * cons*:                                 SRFI-1.              (line  22)
 * continue:                              Breakpoints.         (line  20)
 * convert-color:                         Color Data-Type.     (line  54)
+* coordinates->integer:                  Multidimensional Space-Filling Curves.
+                                                              (line  52)      |
 * copy-bit:                              Bit-Twiddling.       (line 154)
 * copy-bit-field:                        Bit-Twiddling.       (line 177)
 * copy-list:                             List construction.   (line  32)
@@ -18033,7 +18114,7 @@
 * define-*commands*:                     Database Extension.  (line  16)
 * define-access-operation:               Setters.             (line  53)
 * define-command:                        Within-database.     (line  17)
-* define-domains:                        Using Databases.     (line 124)
+* define-domains:                        Using Databases.     (line 125)
 * define-macro:                          Within-database.     (line  58)
 * define-operation:                      Yasos interface.     (line   7)
 * define-predicate:                      Yasos interface.     (line  12)
@@ -18041,14 +18122,14 @@
 * define-structure:                      Define-Structure.    (line  12)
 * define-syntax:                         Macro by Example.    (line  39)
 * define-table:                          Within-database.     (line  26)
-* define-tables:                         Using Databases.     (line 134)
+* define-tables:                         Using Databases.     (line 135)
 * defmacro:                              Defmacro.            (line  41)
 * defmacro:eval:                         Defmacro.            (line  15)
 * defmacro:expand*:                      Defmacro.            (line  52)
 * defmacro:load:                         Defmacro.            (line  19)
 * defmacro?:                             Defmacro.            (line  28)
 * delaminate-list:                       Hilbert Space-Filling Curve.
-                                                              (line  89)
+                                                              (line  90)      |
 * delay:                                 Promises.            (line  15)
 * delete:                                Destructive list operations.
                                                               (line  58)
@@ -18077,7 +18158,7 @@
 * diff:edits:                            Sequence Comparison. (line  45)
 * diff:longest-common-subsequence:       Sequence Comparison. (line  32)
 * difftime:                              Time and Date.       (line  26)
-* directory*-for-each:                   Directories.         (line  43)
+* directory*-for-each:                   Directories.         (line  45)
 * directory-for-each:                    Directories.         (line  21)
 * do-elts:                               Collections.         (line  41)
 * do-keys:                               Collections.         (line  57)
@@ -18091,7 +18172,7 @@
 * dynamic-wind:                          Dynamic-Wind.        (line  13)
 * dynamic?:                              Dynamic Data Type.   (line  12)
 * e-sRGB->CIEXYZ:                        Color Conversions.   (line  57)
-* e-srgb->color:                         Color Spaces.        (line 235)
+* e-srgb->color:                         Color Spaces.        (line 241)
 * e-sRGB->e-sRGB:                        Color Conversions.   (line  68)
 * e-sRGB->sRGB:                          Color Conversions.   (line  60)
 * eighth:                                SRFI-1.              (line  64)
@@ -18118,7 +18199,7 @@
 * fft-1:                                 Discrete Fourier Transform.
                                                               (line  34)
 * fifth:                                 SRFI-1.              (line  61)
-* file->color-dictionary:                Color Names.         (line  68)
+* file->color-dictionary:                Color Names.         (line  69)
 * file->definitions:                     Module Manifests.    (line  72)
 * file->exports:                         Module Manifests.    (line  84)
 * file->loads:                           Module Manifests.    (line  53)
@@ -18191,15 +18272,15 @@
 * gmtime:                                Posix Time.          (line  36)
 * golden-section-search:                 Minimizing.          (line  18)
 * gray-code->integer:                    Hilbert Space-Filling Curve.
-                                                              (line  65)
+                                                              (line  66)      |
 * gray-code<=?:                          Hilbert Space-Filling Curve.
-                                                              (line  75)
+                                                              (line  76)      |
 * gray-code<?:                           Hilbert Space-Filling Curve.
-                                                              (line  73)
+                                                              (line  74)      |
 * gray-code>=?:                          Hilbert Space-Filling Curve.
-                                                              (line  76)
+                                                              (line  77)      |
 * gray-code>?:                           Hilbert Space-Filling Curve.
-                                                              (line  74)
+                                                              (line  75)      |
 * grey:                                  Color Names.         (line  13)
 * grid-horizontals:                      Legending.           (line  58)
 * grid-verticals:                        Legending.           (line  54)
@@ -18218,7 +18299,7 @@
 * heap-insert!:                          Priority Queues.     (line  19)
 * heap-length:                           Priority Queues.     (line  16)
 * hilbert-coordinates->integer:          Hilbert Space-Filling Curve.
-                                                              (line  45)
+                                                              (line  46)      |
 * histograph:                            Character Plotting.  (line  83)
 * home-vicinity:                         Vicinity.            (line  51)
 * htm-fields:                            Parsing HTML.        (line  58)
@@ -18279,8 +18360,10 @@
 * init-debug:                            Breakpoints.         (line   9)
 * integer->bytes:                        Byte/Number Conversions.
                                                               (line  29)
+* integer->coordinates:                  Multidimensional Space-Filling Curves.
+                                                              (line  48)      |
 * integer->gray-code:                    Hilbert Space-Filling Curve.
-                                                              (line  62)
+                                                              (line  63)      |
 * integer->hilbert-coordinates:          Hilbert Space-Filling Curve.
                                                               (line  30)
 * integer->list:                         Bit-Twiddling.       (line 225)
@@ -18316,11 +18399,11 @@
 * L*a*b*:DE*:                            Color Difference Metrics.
                                                               (line  17)
 * L*a*b*:DE*94:                          Color Difference Metrics.
-                                                              (line  25)      |
-* l*c*h->color:                          Color Spaces.        (line 154)
+                                                              (line  25)
+* l*c*h->color:                          Color Spaces.        (line 158)
 * L*C*h->L*a*b*:                         Color Conversions.   (line  45)
 * L*u*v*->CIEXYZ:                        Color Conversions.   (line  34)
-* l*u*v*->color:                         Color Spaces.        (line 102)
+* l*u*v*->color:                         Color Spaces.        (line 104)
 * laguerre:find-polynomial-root:         Root Finding.        (line  57)
 * laguerre:find-root:                    Root Finding.        (line  46)
 * last <1>:                              SRFI-1.              (line  83)
@@ -18345,7 +18428,7 @@
 * list-copy:                             SRFI-1.              (line  24)
 * list-index:                            SRFI-1.              (line 157)
 * list-of??:                             Lists as sets.       (line 120)
-* list-table-definition:                 Using Databases.     (line 167)
+* list-table-definition:                 Using Databases.     (line 168)
 * list-tabulate:                         SRFI-1.              (line  18)
 * list-tail:                             Rev4 Optional Procedures.
                                                               (line  12)
@@ -18354,7 +18437,7 @@
                                                               (line  77)
 * load->path:                            Module Manifests.    (line  63)
 * load-ciexyz:                           Spectra.             (line  40)
-* load-color-dictionary:                 Color Names.         (line  52)
+* load-color-dictionary:                 Color Names.         (line  53)
 * localtime:                             Posix Time.          (line  39)
 * log2-binary-factors:                   Bit-Twiddling.       (line 109)
 * logand:                                Bit-Twiddling.       (line  18)
@@ -18397,6 +18480,8 @@
 * make-array:                            Arrays.              (line  54)
 * make-base on base-table:               The Base.            (line  19)
 * make-bytes:                            Byte.                (line  23)
+* make-cell:                             Multidimensional Space-Filling Curves.
+                                                              (line  12)      |
 * make-color:                            Color Data-Type.     (line  30)
 * make-command-server:                   Command Service.     (line   7)
 * make-directory:                        Directories.         (line  17)
@@ -18431,7 +18516,7 @@
 * make-query-alist-command-server:       HTTP and CGI.        (line  92)
 * make-queue:                            Queues.              (line  13)
 * make-random-state:                     Exact Random Numbers.
-                                                              (line  44)
+                                                              (line  45)      |
 * make-record-type:                      Records.             (line  12)
 * make-rectangular:                      Irrational Real Functions.
                                                               (line  93)
@@ -18440,7 +18525,7 @@
 * make-ruleset:                          Commutative Rings.   (line  82)
 * make-shared-array:                     Arrays.              (line  69)
 * make-sierpinski-indexer:               Sierpinski Curve.    (line   9)
-* make-slib-color-name-db:               Color Names.         (line  94)
+* make-slib-color-name-db:               Color Names.         (line  95)
 * make-syntactic-closure:                Syntactic Closures.  (line 178)
 * make-table on base-table:              Base Tables.         (line   7)
 * make-uri:                              URI.                 (line  12)
@@ -18459,10 +18544,10 @@
 * matrix->array:                         Matrix Algebra.      (line  15)
 * matrix->lists:                         Matrix Algebra.      (line  12)
 * matrix:difference:                     Matrix Algebra.      (line  33)
-* matrix:inverse:                        Matrix Algebra.      (line  45)
+* matrix:inverse:                        Matrix Algebra.      (line  47)
 * matrix:product:                        Matrix Algebra.      (line  36)
 * matrix:sum:                            Matrix Algebra.      (line  30)
-* mdbm:report:                           Using Databases.     (line  94)
+* mdbm:report:                           Using Databases.     (line  95)
 * member:                                SRFI-1.              (line 159)
 * member-if:                             Lists as sets.       (line  62)
 * merge:                                 Sorting.             (line  62)
@@ -18517,10 +18602,10 @@
 * open-database!:                        Using Databases.     (line  68)
 * open-file <1>:                         Byte.                (line  77)
 * open-file:                             Input/Output.        (line  18)
-* open-table:                            Using Databases.     (line 107)
+* open-table:                            Using Databases.     (line 108)
 * open-table on base-table:              Base Tables.         (line  16)
 * open-table on relational-database:     Database Operations. (line  51)
-* open-table!:                           Using Databases.     (line 114)
+* open-table!:                           Using Databases.     (line 115)
 * operate-as:                            Yasos interface.     (line  31)
 * or?:                                   Non-List functions.  (line  19)
 * ordered-for-each-key on base-table:    Base ISAM Operations.
@@ -18553,7 +18638,7 @@
 * plot-column:                           Drawing the Graph.   (line   7)
 * plot-text-column:                      Drawing the Graph.   (line  59)
 * pnm:array-write:                       Portable Image Files.
-                                                              (line  44)
+                                                              (line  45)      |
 * pnm:image-file->array:                 Portable Image Files.
                                                               (line  35)
 * pnm:type-dimensions:                   Portable Image Files.
@@ -18701,7 +18786,7 @@
 * require:                               Require.             (line  25)
 * require-if:                            Require.             (line  40)
 * resample-array!:                       Array Interpolation. (line  19)
-* resene:                                Color Names.         (line 129)
+* resene:                                Color Names.         (line 130)
 * restrict-table on relational-database: Database Operations. (line  76)
 * reverse!:                              SRFI-1.              (line  93)
 * reverse-bit-field:                     Bit-Twiddling.       (line 216)
@@ -18732,7 +18817,7 @@
                                                               (line  47)
 * rule-horizontal:                       Legending.           (line  40)
 * rule-vertical:                         Legending.           (line  32)
-* saturate:                              Color Names.         (line 109)
+* saturate:                              Color Names.         (line 110)
 * scanf:                                 Standard Formatted Input.
                                                               (line  13)
 * scanf-read-list:                       Standard Formatted Input.
@@ -18751,12 +18836,12 @@
 * secant:find-root:                      Root Finding.        (line  69)
 * second:                                SRFI-1.              (line  55)
 * seed->random-state:                    Exact Random Numbers.
-                                                              (line  35)
+                                                              (line  36)      |
 * set:                                   Setters.             (line  30)
 * set-color:                             Graphics Context.    (line  11)
 * set-difference:                        Lists as sets.       (line  42)
 * set-font:                              Graphics Context.    (line  18)
-* set-glyphsize:                         Graphics Context.    (line  56)
+* set-glyphsize:                         Graphics Context.    (line  58)
 * set-linedash:                          Graphics Context.    (line  47)
 * set-linewidth:                         Graphics Context.    (line  42)
 * set-margin-templates:                  Legending.           (line  27)
@@ -18807,13 +18892,13 @@
 * solid:polyline:                        Solid Modeling.      (line 262)
 * solid:prism:                           Solid Modeling.      (line 276)
 * solid:pyramid:                         Solid Modeling.      (line 241)
-* solid:rotation:                        Solid Modeling.      (line 432)
-* solid:scale:                           Solid Modeling.      (line 428)
+* solid:rotation:                        Solid Modeling.      (line 433)
+* solid:scale:                           Solid Modeling.      (line 429)
 * solid:sphere:                          Solid Modeling.      (line 247)
 * solid:text:                            Solid Modeling.      (line 308)
 * solid:texture:                         Solid Modeling.      (line 344)
-* solid:translation:                     Solid Modeling.      (line 423)
-* solidify-database:                     Using Databases.     (line  86)
+* solid:translation:                     Solid Modeling.      (line 424)
+* solidify-database:                     Using Databases.     (line  87)
 * solidify-database on relational-database: Database Operations.
                                                               (line  42)
 * some:                                  Lists as sets.       (line  73)
@@ -18830,38 +18915,38 @@
 * sprintf:                               Standard Formatted Output.
                                                               (line  11)
 * sRGB->CIEXYZ:                          Color Conversions.   (line  48)
-* srgb->color:                           Color Spaces.        (line 195)
+* srgb->color:                           Color Spaces.        (line 201)
 * sRGB->e-sRGB:                          Color Conversions.   (line  59)
 * sRGB->xRGB:                            Color Conversions.   (line  53)
 * ssax:assert-current-char:              Parsing XML.         (line  52)
-* ssax:assert-token:                     Parsing XML.         (line 630)
-* ssax:complete-start-tag:               Parsing XML.         (line 517)
-* ssax:handle-parsed-entity:             Parsing XML.         (line 436)
+* ssax:assert-token:                     Parsing XML.         (line 631)
+* ssax:complete-start-tag:               Parsing XML.         (line 518)
+* ssax:handle-parsed-entity:             Parsing XML.         (line 437)
 * ssax:init-buffer:                      Parsing XML.         (line  64)
-* ssax:make-elem-parser:                 Parsing XML.         (line 667)
-* ssax:make-parser:                      Parsing XML.         (line 714)
-* ssax:make-pi-parser:                   Parsing XML.         (line 647)
+* ssax:make-elem-parser:                 Parsing XML.         (line 668)
+* ssax:make-parser:                      Parsing XML.         (line 715)
+* ssax:make-pi-parser:                   Parsing XML.         (line 648)
 * ssax:next-token:                       Parsing XML.         (line  69)
 * ssax:next-token-of:                    Parsing XML.         (line  83)
-* ssax:read-attributes:                  Parsing XML.         (line 460)
-* ssax:read-cdata-body:                  Parsing XML.         (line 385)
-* ssax:read-char-data:                   Parsing XML.         (line 589)
-* ssax:read-char-ref:                    Parsing XML.         (line 415)
-* ssax:read-external-id:                 Parsing XML.         (line 553)
-* ssax:read-markup-token:                Parsing XML.         (line 328)
-* ssax:read-ncname:                      Parsing XML.         (line 293)
-* ssax:read-pi-body-as-string:           Parsing XML.         (line 373)
-* ssax:read-qname:                       Parsing XML.         (line 319)
-* ssax:read-string:                      Parsing XML.         (line 110)
-* ssax:resolve-name:                     Parsing XML.         (line 504)
+* ssax:read-attributes:                  Parsing XML.         (line 461)
+* ssax:read-cdata-body:                  Parsing XML.         (line 386)
+* ssax:read-char-data:                   Parsing XML.         (line 590)
+* ssax:read-char-ref:                    Parsing XML.         (line 416)
+* ssax:read-external-id:                 Parsing XML.         (line 554)
+* ssax:read-markup-token:                Parsing XML.         (line 329)
+* ssax:read-ncname:                      Parsing XML.         (line 294)
+* ssax:read-pi-body-as-string:           Parsing XML.         (line 374)
+* ssax:read-qname:                       Parsing XML.         (line 320)
+* ssax:read-string:                      Parsing XML.         (line 111)
+* ssax:resolve-name:                     Parsing XML.         (line 505)
 * ssax:reverse-collect-str:              Parsing XML.         (line  18)
 * ssax:reverse-collect-str-drop-ws:      Parsing XML.         (line  24)
-* ssax:scan-misc:                        Parsing XML.         (line 577)
-* ssax:skip-internal-dtd:                Parsing XML.         (line 380)
-* ssax:skip-pi:                          Parsing XML.         (line 370)
-* ssax:skip-s:                           Parsing XML.         (line 285)
+* ssax:scan-misc:                        Parsing XML.         (line 578)
+* ssax:skip-internal-dtd:                Parsing XML.         (line 381)
+* ssax:skip-pi:                          Parsing XML.         (line 371)
+* ssax:skip-s:                           Parsing XML.         (line 286)
 * ssax:skip-while:                       Parsing XML.         (line  58)
-* ssax:xml->sxml:                        Parsing XML.         (line 803)
+* ssax:xml->sxml:                        Parsing XML.         (line 804)
 * sscanf:                                Standard Formatted Input.
                                                               (line  15)
 * stack:                                 Trace.               (line  49)
@@ -18909,7 +18994,7 @@
 * symbol-append:                         String-Case.         (line  23)
 * symmetric:modulus:                     Modular Arithmetic.  (line  13)
 * sync-base on base-table:               The Base.            (line  53)
-* sync-database:                         Using Databases.     (line  82)
+* sync-database:                         Using Databases.     (line  83)
 * sync-database on relational-database:  Database Operations. (line  37)
 * syncase:eval:                          Syntax-Case Macros.  (line  15)
 * syncase:expand:                        Syntax-Case Macros.  (line  10)
@@ -18983,7 +19068,7 @@
 * uri:split-fields:                      URI.                 (line  67)
 * uric:decode:                           URI.                 (line  81)
 * uric:encode:                           URI.                 (line  76)
-* url->color-dictionary:                 Color Names.         (line  77)
+* url->color-dictionary:                 Color Names.         (line  78)
 * user-email-address:                    Transactions.        (line 145)
 * user-vicinity:                         Vicinity.            (line  47)
 * values:                                Values.              (line   9)
@@ -19008,7 +19093,7 @@
 * write-base on base-table:              The Base.            (line  43)
 * write-byte:                            Byte.                (line  82)
 * write-bytes:                           Byte.                (line 118)
-* write-database:                        Using Databases.     (line  79)
+* write-database:                        Using Databases.     (line  80)
 * write-database on relational-database: Database Operations. (line  26)
 * write-line:                            Line I/O.            (line  29)
 * wt-tree/add:                           Basic Operations on Weight-Balanced Trees.
@@ -19068,7 +19153,7 @@
 * x-axis:                                Legending.           (line  51)
 * xcons:                                 SRFI-1.              (line  15)
 * xRGB->CIEXYZ:                          Color Conversions.   (line  51)
-* xrgb->color:                           Color Spaces.        (line 215)
+* xrgb->color:                           Color Spaces.        (line 221)
 * xRGB->sRGB:                            Color Conversions.   (line  54)
 * xyY->XYZ:                              Spectra.             (line 191)
 * xyY:normalize-colors:                  Spectra.             (line 193)
@@ -19176,9 +19261,9 @@
 * array:                                 Arrays.              (line   6)
 * array-for-each:                        Array Mapping.       (line   6)
 * association function:                  Association Lists.   (line  17)
-* Attribute:                             Parsing XML.         (line 460)
+* Attribute:                             Parsing XML.         (line 461)
 * attribute-value:                       HTML.                (line  10)
-* AttValue:                              Parsing XML.         (line 472)
+* AttValue:                              Parsing XML.         (line 473)
 * Auto-sharing:                          Using Databases.     (line  25)
 * balanced binary trees:                 Weight-Balanced Trees.
                                                               (line   8)
@@ -19211,7 +19296,7 @@
 * cgi:                                   HTTP and CGI.        (line   6)
 * chapter-order:                         Chapter Ordering.    (line   6)
 * charplot:                              Character Plotting.  (line   6)
-* Chroma:                                Color Spaces.        (line 141)
+* Chroma:                                Color Spaces.        (line 145)
 * cie1931:                               Spectra.             (line  32)
 * cie1964:                               Spectra.             (line  27)
 * ciexyz:                                Spectra.             (line  37)
@@ -19219,7 +19304,7 @@
 * cksum-string:                          Cyclic Checksum.     (line 161)
 * coerce:                                Type Coercion.       (line   6)
 * collect:                               Collections.         (line   6)
-* color-database:                        Color Names.         (line  65)
+* color-database:                        Color Names.         (line  66)
 * color-names:                           Color Names.         (line   6)
 * command line:                          Command Line.        (line  10)
 * commentfix:                            Rule Types.          (line  35)
@@ -19262,7 +19347,7 @@
 * DrScheme:                              Installation.        (line 151)
 * dynamic:                               Dynamic Data Type.   (line   6)
 * dynamic-wind:                          Dynamic-Wind.        (line   6)
-* e-sRGB:                                Color Spaces.        (line 218)
+* e-sRGB:                                Color Spaces.        (line 224)
 * ELK:                                   Installation.        (line 147)
 * emacs:                                 Transactions.        (line  33)
 * Encapsulated-PostScript:               PostScript Graphing. (line  23)
@@ -19280,7 +19365,7 @@
 * filename <1>:                          Batch.               (line 148)
 * filename:                              Filenames.           (line   6)
 * fluid-let:                             Fluid-Let.           (line   6)
-* fold:                                  Parsing XML.         (line 400)
+* fold:                                  Parsing XML.         (line 401)
 * form:                                  HTML.                (line  63)
 * format:                                Format.              (line   6)
 * Gambit-C 3.0:                          Installation.        (line 161)
@@ -19296,7 +19381,7 @@
                                                               (line   6)
 * glob:                                  Filenames.           (line   6)
 * Gray code:                             Hilbert Space-Filling Curve.
-                                                              (line  52)
+                                                              (line  53)      |
 * guarded-cond-clause:                   Guarded COND Clause. (line   6)
 * Guile:                                 Installation.        (line 170)
 * hash:                                  Hashing.             (line   6)
@@ -19313,8 +19398,8 @@
 * html-for-each:                         Parsing HTML.        (line   6)
 * html-form:                             HTML.                (line   6)
 * http:                                  HTTP and CGI.        (line   6)
-* Hue:                                   Color Spaces.        (line 143)
-* ICC Profile:                           Color Spaces.        (line 191)
+* Hue:                                   Color Spaces.        (line 147)
+* ICC Profile:                           Color Spaces.        (line 197)
 * implcat:                               Catalog Vicinities.  (line  23)
 * indexed-sequential-access-method:      Byte/Number Conversions.
                                                               (line 129)      |
@@ -19333,10 +19418,10 @@
 * JIS:                                   Extra-SLIB Packages. (line  45)
 * Kawa:                                  Installation.        (line 167)
 * L*a*b*:                                Color Spaces.        (line  68)
-* L*C*h:                                 Color Spaces.        (line 135)
-* L*u*v*:                                Color Spaces.        (line  98)
+* L*C*h:                                 Color Spaces.        (line 139)
+* L*u*v*:                                Color Spaces.        (line 100)
 * lamination:                            Hilbert Space-Filling Curve.
-                                                              (line  88)
+                                                              (line  89)      |
 * Larceny:                               Installation.        (line 132)
 * Left Denotation, led:                  Nud and Led Definition.
                                                               (line  13)
@@ -19463,8 +19548,8 @@
 * relational-system:                     Using Databases.     (line  53)
 * repl <1>:                              Repl.                (line   6)
 * repl:                                  Syntax-Case Macros.  (line  62)
-* resene:                                Color Names.         (line 126)
-* Resene:                                Color Names.         (line  95)
+* resene:                                Color Names.         (line 127)
+* Resene:                                Color Names.         (line  96)
 * reset:                                 HTML.                (line  95)
 * rev2-procedures:                       Rev2 Procedures.     (line   6)
 * rev4-optional-procedures:              Rev4 Optional Procedures.
@@ -19477,7 +19562,7 @@
                                                               (line  69)
 * rwb-isam:                              Base Table.          (line  39)
 * S7:                                    Installation.        (line 238)
-* saturate:                              Color Names.         (line  95)
+* saturate:                              Color Names.         (line  96)
 * scanf:                                 Standard Formatted Input.
                                                               (line   6)
 * SCHELOG:                               Extra-SLIB Packages. (line  41)
@@ -19508,6 +19593,8 @@
 * source:                                Library Catalogs.    (line  18)
 * Space-Filling:                         Hilbert Space-Filling Curve.
                                                               (line   8)
+* space-filling:                         Multidimensional Space-Filling Curves.
+                                                              (line   6)      |
 * sparse:                                MAT-File Format.     (line  15)
 * Spectral Tristimulus Values:           Spectra.             (line  24)
 * spiff:                                 Sequence Comparison. (line  29)
@@ -19540,7 +19627,7 @@
 * srfi-95 <1>:                           SRFI.                (line  58)
 * srfi-95:                               Sorting.             (line   6)
 * srfi-96:                               SRFI.                (line  60)
-* sRGB:                                  Color Spaces.        (line 189)
+* sRGB:                                  Color Spaces.        (line 195)
 * stdio:                                 Standard Formatted I/O.
                                                               (line  14)
 * string-case:                           String-Case.         (line   6)
@@ -19592,14 +19679,14 @@
 * wb-table:                              Base Table.          (line  32)
 * weight-balanced binary trees:          Weight-Balanced Trees.
                                                               (line   8)
-* wget:                                  Color Names.         (line  81)
+* wget:                                  Color Names.         (line  82)
 * white point:                           Color Data-Type.     (line 107)
 * wild-card:                             Match Keys.          (line   6)
 * with-file:                             With-File.           (line   6)
 * Word:                                  Transactions.        (line  34)
 * wt-tree:                               Weight-Balanced Trees.
                                                               (line   6)
-* xRGB:                                  Color Spaces.        (line 204)
+* xRGB:                                  Color Spaces.        (line 210)
 * xyY:                                   Spectra.             (line 178)
 * yasos:                                 Yasos.               (line   6)
 
@@ -19645,205 +19732,206 @@
 Node: Yasos89162
 Node: Yasos terms90350
 Node: Yasos interface91538
-Node: Setters93780
-Node: Yasos examples96587
-Node: Textual Conversion Packages99692
-Node: Precedence Parsing100628
-Node: Precedence Parsing Overview101396
-Ref: Precedence Parsing Overview-Footnote-198111
-Node: Rule Types103109
-Node: Ruleset Definition and Use104647
-Node: Token definition107318
-Node: Nud and Led Definition109687
-Node: Grammar Rule Definition112231
-Node: Format119910
-Node: Format Interface120272
-Node: Format Specification121948
-Node: Standard Formatted I/O132976
-Node: Standard Formatted Output133647
-Node: Standard Formatted Input143188
-Node: Programs and Arguments149948
-Node: Getopt150530
-Node: Command Line157159
-Node: Parameter lists160440
-Node: Getopt Parameter lists164429
-Node: Filenames167753
-Node: Batch171725
-Node: HTML179643
-Node: HTML Tables186168
-Node: HTTP and CGI192783
-Node: Parsing HTML198047
-Node: URI200743
-Node: Parsing XML205494
-Node: Printing Scheme238463
-Node: Generic-Write238873
-Node: Object-To-String240372
-Node: Pretty-Print240874
-Node: Time and Date243965
-Node: Time Zone245105
-Node: Posix Time249930
-Node: Common-Lisp Time252181
-Node: Time Infrastructure253890
-Node: NCBI-DNA254324
-Node: Schmooz255779
-Node: Mathematical Packages260098
-Node: Bit-Twiddling260936
-Node: Modular Arithmetic269585
-Node: Irrational Integer Functions272099
-Node: Irrational Real Functions273863
-Node: Prime Numbers278152
-Node: Random Numbers279939
-Node: Exact Random Numbers280869
-Node: Inexact Random Numbers283224
-Node: Discrete Fourier Transform285141
-Node: Cyclic Checksum287659
-Node: Graphing295373
-Node: Character Plotting295651
-Node: PostScript Graphing301246
-Node: Column Ranges303108
-Node: Drawing the Graph304670
-Node: Graphics Context307928
-Node: Rectangles310572
-Node: Legending312102
-Node: Legacy Plotting314414
-Node: Example Graph315548
-Node: Solid Modeling319998
-Node: Color339590
-Node: Color Data-Type340509
-Ref: Color Data-Type-Footnote-1331965
-Node: Color Spaces344983
-Ref: Color Spaces-Footnote-1341970
-Node: Spectra354985
-Node: Color Difference Metrics363968
-Node: Color Conversions367027
-Node: Color Names369254
-Node: Daylight376273
-Node: Root Finding381045
-Node: Minimizing385248
-Ref: Minimizing-Footnote-1373745
-Node: The Limit387373
-Node: Commutative Rings392326
-Node: Matrix Algebra403820
-Node: Database Packages405379
-Node: Relational Database405745
-Node: Using Databases406695
-Node: Table Operations413284
-Node: Single Row Operations414578
-Node: Match-Keys416908
-Node: Multi-Row Operations419070
-Node: Indexed Sequential Access Methods421544
-Node: Sequential Index Operations422535
-Node: Table Administration424974
-Node: Database Interpolation425924
-Node: Embedded Commands427109
-Node: Database Extension428766
-Node: Command Intrinsics430974
-Node: Define-tables Example432619
-Node: The *commands* Table434352
-Node: Command Service436713
-Node: Command Example438758
-Node: Database Macros443394
-Node: Within-database444362
-Node: Within-database Example447352
-Node: Database Browser449222
-Node: Relational Infrastructure450381
-Node: Base Table450768
-Node: The Base453359
-Node: Base Tables456560
-Node: Base Field Types458119
-Node: Composite Keys458985
-Node: Base Record Operations461122
-Node: Match Keys462933
-Node: Aggregate Base Operations463897
-Node: Base ISAM Operations465045
-Node: Catalog Representation466446
-Node: Relational Database Objects469198
-Node: Database Operations471925
-Node: Weight-Balanced Trees475712
-Node: Construction of Weight-Balanced Trees479681
-Node: Basic Operations on Weight-Balanced Trees483230
-Node: Advanced Operations on Weight-Balanced Trees486180
-Node: Indexing Operations on Weight-Balanced Trees495744
-Node: Other Packages499668
-Node: Data Structures500280
-Node: Arrays501204
-Node: Subarrays509974
-Node: Array Mapping512278
-Node: Array Interpolation515161
-Node: Association Lists516508
-Node: Byte518867
-Node: Byte/Number Conversions524969
-Node: MAT-File Format532676
-Node: Portable Image Files534038
-Node: Collections535751
-Node: Dynamic Data Type541947
-Node: Hash Tables543309
-Node: Object545980
-Node: Priority Queues554346
-Node: Queues555284
-Node: Records556612
-Node: Sorting and Searching560205
-Node: Common List Functions560981
-Node: List construction561521
-Node: Lists as sets563319
-Node: Lists as sequences569940
-Node: Destructive list operations575312
-Node: Non-List functions578073
-Node: Tree Operations579245
-Node: Chapter Ordering581021
-Node: Sorting582751
-Node: Topological Sort586360
-Node: Hashing588151
-Node: Space-Filling Curves589251
-Node: Hilbert Space-Filling Curve589638
-Node: Peano Space-Filling Curve593611
-Node: Sierpinski Curve594800
-Node: Soundex597347
-Node: String Search599028
-Node: Sequence Comparison601684
-Node: Procedures604897
-Node: Type Coercion605508
-Node: String-Case606023
-Node: String Ports607933
-Node: Line I/O608788
-Node: Multi-Processing610920
-Node: Metric Units612121
-Node: Standards Support620483
-Node: RnRS621362
-Node: With-File622668
-Node: Transcripts623027
-Node: Rev2 Procedures623444
-Node: Rev4 Optional Procedures625260
-Node: Multi-argument / and -625812
-Node: Multi-argument Apply626305
-Node: Rationalize626725
-Node: Promises627970
-Node: Dynamic-Wind628499
-Node: Eval629850
-Node: Values633278
-Node: SRFI634176
-Node: SRFI-1635947
-Node: Session Support640537
-Node: Repl641194
-Node: Quick Print642573
-Node: Debug643962
-Node: Breakpoints644952
-Node: Trace647077
-Node: System Interface650386
-Node: Directories651286
-Node: Transactions653582
-Node: CVS659702
-Node: Extra-SLIB Packages660952
-Node: About SLIB663319
-Node: Installation664271
-Node: The SLIB script674890
-Node: Porting675472
-Ref: Porting-Footnote-1650300
-Node: Compiled and Implementation-Specific Features677306
-Node: Coding Guidelines678528
-Node: Copyrights681063
-Node: About this manual684601
-Node: GNU Free Documentation License685283
-Node: Index710522
+Node: Setters93789
+Node: Yasos examples96596
+Node: Textual Conversion Packages99701
+Node: Precedence Parsing100637
+Node: Precedence Parsing Overview101405
+Ref: Precedence Parsing Overview-Footnote-198112
+Node: Rule Types103118
+Node: Ruleset Definition and Use104656
+Node: Token definition107327
+Node: Nud and Led Definition109696
+Node: Grammar Rule Definition112240
+Node: Format119919
+Node: Format Interface120281
+Node: Format Specification121957
+Node: Standard Formatted I/O132985
+Node: Standard Formatted Output133656
+Node: Standard Formatted Input143277
+Node: Programs and Arguments150037
+Node: Getopt150619
+Node: Command Line157248
+Node: Parameter lists160529
+Node: Getopt Parameter lists164518
+Node: Filenames167842
+Node: Batch171815
+Node: HTML179733
+Node: HTML Tables186258
+Node: HTTP and CGI192873
+Node: Parsing HTML198137
+Node: URI200833
+Node: Parsing XML205584
+Node: Printing Scheme238554
+Node: Generic-Write238964
+Node: Object-To-String240463
+Node: Pretty-Print240965
+Node: Time and Date244056
+Node: Time Zone245196
+Node: Posix Time250021
+Node: Common-Lisp Time252272
+Node: Time Infrastructure253981
+Node: NCBI-DNA254415
+Node: Schmooz255870
+Node: Mathematical Packages260189
+Node: Bit-Twiddling261027
+Node: Modular Arithmetic269676
+Node: Irrational Integer Functions272190
+Node: Irrational Real Functions273954
+Node: Prime Numbers278243
+Node: Random Numbers280030
+Node: Exact Random Numbers280960
+Node: Inexact Random Numbers283316
+Node: Discrete Fourier Transform285233
+Node: Cyclic Checksum287751
+Node: Graphing295465
+Node: Character Plotting295743
+Node: PostScript Graphing301338
+Node: Column Ranges303200
+Node: Drawing the Graph304762
+Node: Graphics Context308020
+Node: Rectangles310666
+Node: Legending312196
+Node: Legacy Plotting314508
+Node: Example Graph315723
+Node: Solid Modeling320173
+Node: Color339766
+Node: Color Data-Type340685
+Ref: Color Data-Type-Footnote-1331885
+Node: Color Spaces345159
+Ref: Color Spaces-Footnote-1341898
+Node: Spectra355169
+Node: Color Difference Metrics364152
+Node: Color Conversions367211
+Node: Color Names369438
+Node: Daylight376458
+Node: Root Finding381230
+Node: Minimizing385433
+Ref: Minimizing-Footnote-1373674
+Node: The Limit387558
+Node: Commutative Rings392511
+Node: Matrix Algebra404005
+Node: Database Packages405566
+Node: Relational Database405932
+Node: Using Databases406882
+Node: Table Operations413472
+Node: Single Row Operations414766
+Node: Match-Keys417096
+Node: Multi-Row Operations419258
+Node: Indexed Sequential Access Methods421732
+Node: Sequential Index Operations422723
+Node: Table Administration425162
+Node: Database Interpolation426112
+Node: Embedded Commands427297
+Node: Database Extension428954
+Node: Command Intrinsics431162
+Node: Define-tables Example432807
+Node: The *commands* Table434540
+Node: Command Service436901
+Node: Command Example438946
+Node: Database Macros443582
+Node: Within-database444550
+Node: Within-database Example447540
+Node: Database Browser449410
+Node: Relational Infrastructure450568
+Node: Base Table450955
+Node: The Base453546
+Node: Base Tables456747
+Node: Base Field Types458306
+Node: Composite Keys459172
+Node: Base Record Operations461309
+Node: Match Keys463120
+Node: Aggregate Base Operations464084
+Node: Base ISAM Operations465232
+Node: Catalog Representation466633
+Node: Relational Database Objects469385
+Node: Database Operations472112
+Node: Weight-Balanced Trees475899
+Node: Construction of Weight-Balanced Trees479868
+Node: Basic Operations on Weight-Balanced Trees483417
+Node: Advanced Operations on Weight-Balanced Trees486367
+Node: Indexing Operations on Weight-Balanced Trees495931
+Node: Other Packages499855
+Node: Data Structures500467
+Node: Arrays501391
+Node: Subarrays510161
+Node: Array Mapping512465
+Node: Array Interpolation515348
+Node: Association Lists516695
+Node: Byte519054
+Node: Byte/Number Conversions525156
+Node: MAT-File Format532863
+Node: Portable Image Files534225
+Node: Collections535939
+Node: Dynamic Data Type542135
+Node: Hash Tables543497
+Node: Object546168
+Node: Priority Queues554534
+Node: Queues555472
+Node: Records556800
+Node: Sorting and Searching560393
+Node: Common List Functions561175
+Node: List construction561715
+Node: Lists as sets563513
+Node: Lists as sequences570134
+Node: Destructive list operations575506
+Node: Non-List functions578267
+Node: Tree Operations579439
+Node: Chapter Ordering581215
+Node: Sorting582945
+Node: Topological Sort586554
+Node: Hashing588345
+Node: Space-Filling Curves589445
+Node: Multidimensional Space-Filling Curves589938
+Node: Hilbert Space-Filling Curve594578
+Node: Peano Space-Filling Curve598728
+Node: Sierpinski Curve599963
+Node: Soundex602565
+Node: String Search604246
+Node: Sequence Comparison606902
+Node: Procedures610115
+Node: Type Coercion610726
+Node: String-Case611241
+Node: String Ports613151
+Node: Line I/O614006
+Node: Multi-Processing616138
+Node: Metric Units617339
+Node: Standards Support625701
+Node: RnRS626580
+Node: With-File627886
+Node: Transcripts628245
+Node: Rev2 Procedures628662
+Node: Rev4 Optional Procedures630478
+Node: Multi-argument / and -631030
+Node: Multi-argument Apply631523
+Node: Rationalize631943
+Node: Promises633188
+Node: Dynamic-Wind633717
+Node: Eval635068
+Node: Values638496
+Node: SRFI639394
+Node: SRFI-1641165
+Node: Session Support645755
+Node: Repl646412
+Node: Quick Print647791
+Node: Debug649180
+Node: Breakpoints650170
+Node: Trace652295
+Node: System Interface655604
+Node: Directories656504
+Node: Transactions658802
+Node: CVS664922
+Node: Extra-SLIB Packages666172
+Node: About SLIB668539
+Node: Installation669491
+Node: The SLIB script680110
+Node: Porting680692
+Ref: Porting-Footnote-1652848
+Node: Compiled and Implementation-Specific Features682526
+Node: Coding Guidelines683748
+Node: Copyrights686283
+Node: About this manual689821
+Node: GNU Free Documentation License690503
+Node: Index715742
 
 End Tag Table
diff -urN slib-3b4/slib.texi slib-9999/slib.texi
--- slib-3b4/slib.texi	2012-10-23 17:17:29.000000000 -0400
+++ slib-9999/slib.texi	2014-02-11 22:39:40.000000000 -0500
@@ -812,11 +812,13 @@
 Displays the information of @code{(slib:report-version)} followed by
 almost all the information neccessary for submitting a problem report.
 An unspecified value is returned.
+@end defun
 
-@defunx slib:report #t
+@defun slib:report #t
 provides a more verbose listing.
+@end defun
 
-@defunx slib:report filename
+@defun slib:report filename
 Writes the verbose report to file @file{filename}.
 
 @example
@@ -940,8 +942,9 @@
 current position of the character in @var{port} which will next be
 read or written.  If the implementation does not support
 file-position, then @code{#f} is returned.
+@end defun
 
-@defunx file-position port k
+@defun file-position port k
 @var{port} must be open to a file.  @code{file-position} sets the
 current position in @var{port} which will next be read or written.  If
 successful, @code{#t} is returned; otherwise @code{file-position}
@@ -2425,7 +2428,7 @@
 
 @deffn Syntax object @code{((@var{name} @var{self} @var{arg} @dots{}) @var{body})} @dots{}
 Returns an object (an instance of the object system) with operations.
-Invoking @code{(@var{name} @var{object} @var{arg} @dots{}} executes the
+Invoking @code{(@var{name} @var{object} @var{arg} @dots{})} executes the
 @var{body} of the @var{object} with @var{self} bound to @var{object} and
 with argument(s) @var{arg}@dots{}.
 @end deffn
@@ -3400,7 +3403,7 @@
 A character that specifies the conversion to be applied.
 @end itemize
 
-@subsubsection Exact Conversions
+Exact Conversions
 
 @table @asis
 @item @samp{b}, @samp{B}
@@ -3426,7 +3429,7 @@
 digits @samp{0123456789ABCDEF}.
 @end table
 
-@subsubsection Inexact Conversions
+Inexact Conversions
 
 @table @asis
 @item @samp{f}
@@ -3451,7 +3454,8 @@
 
 @end table
 
-@subsubsection Other Conversions
+Other Conversions
+
 @table @asis
 @item @samp{c}
 Print a single character.  The @samp{-} flag is the only one which can
@@ -4592,11 +4596,13 @@
 
 @defun tzset
 Returns the default time-zone.
+@end defun
 
-@defunx tzset tz
+@defun tzset tz
 Sets (and returns) the default time-zone to @var{tz}.
+@end defun
 
-@defunx tzset TZ-string
+@defun tzset TZ-string
 Sets (and returns) the default time-zone to that specified by
 @var{TZ-string}.
 
@@ -4670,11 +4676,13 @@
 
 @defun gmtime caltime
 Converts the calendar time @var{caltime} to UTC and returns it.
+@end defun
 
-@defunx localtime caltime tz
+@defun localtime caltime tz
 Returns @var{caltime} converted to UTC relative to timezone @var{tz}.
+@end defun
 
-@defunx localtime caltime
+@defun localtime caltime
 converts the calendar time @var{caltime} to a vector of integers
 expressed relative to the user's time zone.  @code{localtime} sets the
 variable @var{*timezone*} with the difference between Coordinated
@@ -4686,12 +4694,14 @@
 @defun gmktime univtime
 Converts a vector of integers in GMT Coordinated Universal Time (UTC)
 format to a calendar time.
+@end defun
 
-@defunx mktime univtime
+@defun mktime univtime
 Converts a vector of integers in local Coordinated Universal Time (UTC)
 format to a calendar time.
+@end defun
 
-@defunx mktime univtime tz
+@defun mktime univtime tz
 Converts a vector of integers in Coordinated Universal Time (UTC) format
 (relative to time-zone @var{tz})
 to calendar time.
@@ -5096,8 +5106,9 @@
 corresponding to each bit of the non-negative integer @var{k}.  #t is
 coded for each 1; #f for 0.  The @var{len} argument defaults to
 @code{(integer-length @var{k})}.
+@end defun
 
-@defunx list->integer list
+@defun list->integer list
 @code{list->integer} returns an integer formed from the booleans in the
 list @var{list}, which must be a list of booleans.  A 1 bit is coded for
 each #t; a 0 bit for #f.
@@ -5519,8 +5530,9 @@
 (cksum (in-vicinity (library-vicinity) "ratize.scm"))
 @result{} 157103930
 @end example
+@end defun
 
-@defunx cksum port
+@defun cksum port
 Computes the checksum of the bytes read from @var{port} until the
 end-of-file.
 
@@ -5539,8 +5551,9 @@
 @defun crc16 file
 
 Computes the USB data-packet (16-bit) CRC of @var{file}.
+@end defun
 
-@defunx crc16 port
+@defun crc16 port
 Computes the USB data-packet (16-bit) CRC of the bytes read from
 @var{port} until the end-of-file.
 
@@ -5552,8 +5565,9 @@
 @defun crc5 file
 
 Computes the USB token (5-bit) CRC of @var{file}.
+@end defun
 
-@defunx crc5 port
+@defun crc5 port
 Computes the USB token (5-bit) CRC of the bytes read from
 @var{port} until the end-of-file.
 
@@ -5747,8 +5761,9 @@
 
 @defun color? obj
 Returns #t if @var{obj} is a color.
+@end defun
 
-@defunx color? obj typ
+@defun color? obj typ
 Returns #t if @var{obj} is a color of color-space @var{typ}.  The symbol
 @var{typ} must be one of:
 
@@ -5961,14 +5976,16 @@
 Loads the Spectral Tristimulus Values
 @cite{CIE 1964 Supplementary Standard Colorimetric Observer},
 defining @var{cie:x-bar}, @var{cie:y-bar}, and @var{cie:z-bar}.
+@end deftp
 
-@deftpx {Feature} cie1931
+@deftp {Feature} cie1931
 @ftindex cie1931
 Loads the Spectral Tristimulus Values
 @cite{CIE 1931 Supplementary Standard Colorimetric Observer},
 defining @var{cie:x-bar}, @var{cie:y-bar}, and @var{cie:z-bar}.
+@end deftp
 
-@deftpx {Feature} ciexyz
+@deftp {Feature} ciexyz
 @ftindex ciexyz
 Requires Spectral Tristimulus Values, defaulting to cie1931,
 defining @var{cie:x-bar}, @var{cie:y-bar}, and @var{cie:z-bar}.
@@ -6037,8 +6054,9 @@
 computes the CIEXYZ(1931) values for the spectrum returned by @var{proc}
 when called with arguments from 380e-9 to 780e-9, the wavelength in
 meters.
+@end defun
 
-@defunx spectrum->XYZ spectrum x1 x2
+@defun spectrum->XYZ spectrum x1 x2
 @var{x1} and @var{x2} must be positive real numbers specifying the
 wavelengths (in meters) corresponding to the zeroth and last elements of
 vector or list @var{spectrum}.  @code{spectrum->XYZ} returns the
@@ -6160,8 +6178,9 @@
 scales each chromaticity so it sums to 1 or less; and divides the
 @var{Y} values by the maximum @var{Y} in the dataset, so all lie between
 0 and 1.
+@end defun
 
-@defunx xyY:normalize-colors colors n
+@defun xyY:normalize-colors colors n
 If @var{n} is positive real, then @code{xyY:normalize-colors} divides
 the @var{Y} values by @var{n} times the maximum @var{Y} in the dataset.
 
@@ -6206,8 +6225,9 @@
 
 @defun L*a*b*:DE* lab1 lab2
 Returns the Euclidean distance between @var{lab1} and @var{lab2}.
+@end defun
 
-@defunx CIE:DE* color1 color2 white-point
+@defun CIE:DE* color1 color2 white-point
 @defunx CIE:DE* color1 color2
 Returns the Euclidean distance in L*a*b* space between @var{color1} and
 @var{color2}.
@@ -6725,8 +6745,9 @@
 @var{sub-op2}, respectively.  The argument @var{reduction} is a
 procedure accepting 2 arguments which will be lists whose @code{car}s
 are @var{sub-op1} and @var{sub-op2}.
+@end defun
 
-@defunx cring:define-rule op sub-op1 'identity reduction
+@defun cring:define-rule op sub-op1 'identity reduction
 Defines a rule for the case when the operation represented by symbol
 @var{op} is applied to a list whose @code{car} is @var{sub-op1}, and
 some other argument.  @var{Reduction} will be called with the list whose
@@ -7211,8 +7232,9 @@
 returns the key-list identifying the lowest record higher than
 @var{key1} @var{key2} @dots{} which is stored in the relational-table;
 or false if no higher record is present.
+@end defop
 
-@defopx {Operation} {relational-table} isam-next column-name
+@defop {Operation} {relational-table} isam-next column-name
 The symbol @var{column-name} names a key field.  In the list returned
 by @code{isam-next}, that field, or a field to its left, will be
 changed.  This allows one to skip over less significant key fields.
@@ -7223,8 +7245,9 @@
 returns the key-list identifying the highest record less than
 @var{key1} @var{key2} @dots{} which is stored in the relational-table;
 or false if no lower record is present.
+@end defop
 
-@defopx {Operation} {relational-table} isam-prev column-name
+@defop {Operation} {relational-table} isam-prev column-name
 The symbol @var{column-name} names a key field.  In the list returned
 by @code{isam-next}, that field, or a field to its left, will be
 changed.  This allows one to skip over less significant key fields.
@@ -7264,8 +7287,9 @@
 names, or type names respectively for this table.  These 4 methods are
 different from the others in that the list is returned, rather than a
 procedure to obtain the list.
+@end defop
 
-@defopx {Operation} {relational-table} primary-limit
+@defop {Operation} {relational-table} primary-limit
 Returns the number of primary keys fields in the relations in this
 table.
 @end defop
@@ -7398,16 +7422,19 @@
 supplied, @code{open-command-database} will attempt to deduce the correct
 base-table-type.  If the database can not be opened or if it lacks the
 @code{*commands*} table, @code{#f} is returned.
+@end defun
 
-@defunx open-command-database! filename
+@defun open-command-database! filename
 @defunx open-command-database! filename base-table-type
 Returns @emph{mutable} open enhanced relational database @dots{}
+@end defun
 
-@defunx open-command-database database
+@defun open-command-database database
 Returns @var{database} if it is an immutable relational database; #f
 otherwise.
+@end defun
 
-@defunx open-command-database! database
+@defun open-command-database! database
 Returns @var{database} if it is a mutable relational database; #f
 otherwise.
 @end defun
@@ -7762,7 +7789,7 @@
 etags -lscheme -r'/ *(define-\(command\|table\) (\([^; \t]+\)/\2/' \
       source1.scm ...
 @end example
-
+@c ))
 @menu
 * Within-database::             
 * Within-database Example::     
@@ -7928,32 +7955,31 @@
 
 Prints the names of all the tables in @var{database} and sets browse's
 default to @var{database}.
-
-@deffnx {Procedure} browse
+@end deffn
+@deffn {Procedure} browse
 
 Prints the names of all the tables in the default database.
-
-@deffnx {Procedure} browse table-name
+@end deffn
+@deffn {Procedure} browse table-name
 
 For each record of the table named by the symbol @var{table-name},
 prints a line composed of all the field values.
-
-@deffnx {Procedure} browse pathname
+@end deffn
+@deffn {Procedure} browse pathname
 
 Opens the database named by the string @var{pathname}, prints the names
 of all its tables, and sets browse's default to the database.
-
-@deffnx {Procedure} browse database table-name
+@end deffn
+@deffn {Procedure} browse database table-name
 
 Sets browse's default to @var{database} and prints the records of the
 table named by the symbol @var{table-name}.
-
-@deffnx {Procedure} browse pathname table-name
+@end deffn
+@deffn {Procedure} browse pathname table-name
 
 Opens the database named by the string @var{pathname} and sets browse's
 default to it; @code{browse} prints the records of the table named by
 the symbol @var{table-name}.
-
 @end deffn
 
 
@@ -8576,8 +8602,9 @@
 describing the columns of a new base table in this database, otherwise
 returns @code{#f}.  For the fields and layout of descriptor tables,
 @xref{Catalog Representation}.
+@end defop
 
-@defopx {Operation} {relational-database} create-table table-name table-desc-name
+@defop {Operation} {relational-database} create-table table-name table-desc-name
 Returns a methods procedure for a new (open) relational table with
 columns as described by @var{table-desc-name}, otherwise returns
 @code{#f}.
@@ -9660,7 +9687,7 @@
 * Sorting::                     'sort
 * Topological Sort::            Keep your socks on.
 * Hashing::                     'hash
-* Space-Filling Curves::        'hilbert and 'sierpinski
+* Space-Filling Curves::        'space-filling and 'sierpinski
 * Soundex::                     Dimension Reduction of Last Names
 * String Search::               Also Search from a Port.
 * Sequence Comparison::         'diff and longest-common-subsequence
@@ -9900,14 +9927,16 @@
 @defun list-of?? predicate
 Returns a predicate which returns true if its argument is a list every
 element of which satisfies @var{predicate}.
+@end defun
 
-@defunx list-of?? predicate low-bound high-bound
+@defun list-of?? predicate low-bound high-bound
 @var{low-bound} and @var{high-bound} are non-negative integers.
 @code{list-of??} returns a predicate which returns true if its argument
 is a list of length between @var{low-bound} and @var{high-bound}
 (inclusive); every element of which satisfies @var{predicate}.
+@end defun
 
-@defunx list-of?? predicate bound
+@defun list-of?? predicate bound
 @var{bound} is an integer.  If @var{bound} is negative, @code{list-of??}
 returns a predicate which returns true if its argument is a list of
 length greater than @code{(- @var{bound})}; every element of which
@@ -10520,12 +10549,19 @@
 @subsection Space-Filling Curves
 
 @menu
-* Hilbert Space-Filling Curve::  Non-negative coordinates
-* Peano Space-Filling Curve::   Integer coordinates
-* Sierpinski Curve::            
+* Multidimensional Space-Filling Curves::  Includes Hilbert and Peano curves
+* Hilbert Space-Filling Curve::            Legacy
+* Peano Space-Filling Curve::              Legacy
+* Sierpinski Curve::                       Rank-2 to scalar
 @end menu
 
-@node Hilbert Space-Filling Curve, Peano Space-Filling Curve, Space-Filling Curves, Space-Filling Curves
+@node Multidimensional Space-Filling Curves, Hilbert Space-Filling Curve, Space-Filling Curves, Space-Filling Curves
+@subsubsection Multidimensional Space-Filling Curves
+
+@include rmdsff.txi
+
+
+@node Hilbert Space-Filling Curve, Peano Space-Filling Curve, Multidimensional Space-Filling Curves, Space-Filling Curves
 @subsubsection Hilbert Space-Filling Curve
 
 @include phil-spc.txi
@@ -10684,16 +10720,19 @@
 @deffn {Procedure} find-string-from-port? str in-port max-no-chars
 Looks for a string @var{str} within the first @var{max-no-chars} chars
 of the input port @var{in-port}.
+@end deffn
 
-@deffnx {Procedure} find-string-from-port? str in-port
+@deffn {Procedure} find-string-from-port? str in-port
 When called with two arguments, the search span is limited by the end of
 the input stream.
+@end deffn
 
-@deffnx {Procedure} find-string-from-port? str in-port char
+@deffn {Procedure} find-string-from-port? str in-port char
 Searches up to the first occurrence of character @var{char} in
 @var{str}.
+@end deffn
 
-@deffnx {Procedure} find-string-from-port? str in-port proc
+@deffn {Procedure} find-string-from-port? str in-port proc
 Searches up to the first occurrence of the procedure @var{proc}
 returning non-false when called with a character (from @var{in-port})
 argument.
@@ -11635,12 +11674,14 @@
 @deffn {Procedure} trace-all file @dots{}
 Traces (@pxref{Trace}) all procedures @code{define}d at top-level in
 @file{file} @dots{}.
+@end deffn
 
-@deffnx {Procedure} track-all file @dots{}
+@deffn {Procedure} track-all file @dots{}
 Tracks (@pxref{Trace}) all procedures @code{define}d at top-level in
 @file{file} @dots{}.
+@end deffn
 
-@deffnx {Procedure} stack-all file @dots{}
+@deffn {Procedure} stack-all file @dots{}
 Stacks (@pxref{Trace}) all procedures @code{define}d at top-level in
 @file{file} @dots{}.
 @end deffn
@@ -11676,8 +11717,9 @@
 @defun continue
 Pops the topmost continuation off of the continuation stack and returns
 an unspecified value to it.
+@end defun
 
-@defunx continue arg1 @dots{}
+@defun continue arg1 @dots{}
 Pops the topmost continuation off of the continuation stack and returns
 @var{arg1} @dots{} to it.
 @end defun
@@ -11685,7 +11727,9 @@
 @defmac break proc1 @dots{}
 Redefines the top-level named procedures given as arguments so that
 @code{breakpoint} is called before calling @var{proc1} @dots{}.
-@defmacx break
+@end defmac
+
+@defmac break
 With no arguments, makes sure that all the currently broken identifiers
 are broken (even if those identifiers have been redefined) and returns a
 list of the broken identifiers.
@@ -11693,7 +11737,9 @@
 
 @defmac unbreak proc1 @dots{}
 Turns breakpoints off for its arguments.
-@defmacx unbreak
+@end defmac
+
+@defmac unbreak
 With no arguments, unbreaks all currently broken identifiers and returns
 a list of these formerly broken identifiers.
 @end defmac
@@ -11768,7 +11814,9 @@
 
 @defmac trace proc1 @dots{}
 Traces the top-level named procedures given as arguments.
-@defmacx trace
+@end defmac
+
+@defmac trace
 With no arguments, makes sure that all the currently traced identifiers
 are traced (even if those identifiers have been redefined) and returns a
 list of the traced identifiers.
@@ -11776,7 +11824,8 @@
 
 @defmac track proc1 @dots{}
 Traces the top-level named procedures given as arguments.
-@defmacx track
+@end defmac
+@defmac track
 With no arguments, makes sure that all the currently tracked identifiers
 are tracked (even if those identifiers have been redefined) and returns
 a list of the tracked identifiers.
@@ -11784,7 +11833,8 @@
 
 @defmac stack proc1 @dots{}
 Traces the top-level named procedures given as arguments.
-@defmacx stack
+@end defmac
+@defmac stack
 With no arguments, makes sure that all the currently stacked identifiers
 are stacked (even if those identifiers have been redefined) and returns
 a list of the stacked identifiers.
@@ -11792,21 +11842,24 @@
 
 @defmac untrace proc1 @dots{}
 Turns tracing, tracking, and  off for its arguments.
-@defmacx untrace
+@end defmac
+@defmac untrace
 With no arguments, untraces all currently traced identifiers and returns
 a list of these formerly traced identifiers.
 @end defmac
 
 @defmac untrack proc1 @dots{}
 Turns tracing, tracking, and  off for its arguments.
-@defmacx untrack
+@end defmac
+@defmac untrack
 With no arguments, untracks all currently tracked identifiers and returns
 a list of these formerly tracked identifiers.
 @end defmac
 
 @defmac unstack proc1 @dots{}
 Turns tracing, stacking, and  off for its arguments.
-@defmacx unstack
+@end defmac
+@defmac unstack
 With no arguments, unstacks all currently stacked identifiers and returns
 a list of these formerly stacked identifiers.
 @end defmac
diff -urN slib-3b4/solid.txi slib-9999/solid.txi
--- slib-3b4/solid.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/solid.txi	2014-04-07 19:04:47.000000000 -0400
@@ -546,7 +546,8 @@
 pointing metallic arrow centered at @var{center}.
 
 
-@defunx solid:arrow
+@end defun
+@defun solid:arrow
 Returns an upward pointing metallic arrow centered at the origin.
 @end defun
 
diff -urN slib-3b4/xml-parse.txi slib-9999/xml-parse.txi
--- slib-3b4/xml-parse.txi	2013-05-12 00:47:55.000000000 -0400
+++ slib-9999/xml-parse.txi	2014-04-07 19:04:47.000000000 -0400
@@ -110,7 +110,8 @@
 characters are returned in a string.
 
 
-@defunx ssax:next-token-of pred port
+@end defun
+@defun ssax:next-token-of pred port
 
 Reads characters from the @var{port} for which @var{pred} (a procedure of
 one argument) returns non-#f.  The reading stops at the first
